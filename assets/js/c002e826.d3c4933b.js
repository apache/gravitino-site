"use strict";(self.webpackChunkapache_website_template=self.webpackChunkapache_website_template||[]).push([[24187],{71990:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var i=n(13274),t=n(21943);const r={title:"Gravitino Spark Lineage support",slug:"/lineage/gravitino-spark-lineage",keyword:"Gravitino Spark OpenLineage",license:"This software is licensed under the Apache License version 2."},s=void 0,l={id:"lineage/gravitino-spark-lineage",title:"Gravitino Spark Lineage support",description:"Overview",source:"@site/docs/lineage/gravitino-spark-lineage.md",sourceDirName:"lineage",slug:"/lineage/gravitino-spark-lineage",permalink:"/docs/next/lineage/gravitino-spark-lineage",draft:!1,unlisted:!1,editUrl:"https://github.com/apache/gravitino-site/tree/main/docs/lineage/gravitino-spark-lineage.md",tags:[],version:"current",frontMatter:{title:"Gravitino Spark Lineage support",slug:"/lineage/gravitino-spark-lineage",keyword:"Gravitino Spark OpenLineage",license:"This software is licensed under the Apache License version 2."},sidebar:"docs",previous:{title:"Overview",permalink:"/docs/next/lineage/lineage"},next:{title:"Gravitino Server Lineage support",permalink:"/docs/next/lineage/gravitino-server-lineage"}},c={},d=[{value:"Overview",id:"overview",level:2},{value:"Capabilities",id:"capabilities",level:2},{value:"Gravitino dataset",id:"gravitino-dataset",level:2},{value:"How to use",id:"how-to-use",level:2}];function o(e){const a={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(a.p,{children:"By leveraging OpenLineage Spark plugin, Gravitino provides a separate Spark plugin to extract data lineage and transform the dataset identifier to Gravitino identifier."}),"\n",(0,i.jsx)(a.h2,{id:"capabilities",children:"Capabilities"}),"\n",(0,i.jsxs)(a.ul,{children:["\n",(0,i.jsx)(a.li,{children:"Supports column lineage."}),"\n",(0,i.jsx)(a.li,{children:"Supports lineage across different catalogs like like fileset, Iceberg, Hudi, Paimon, Hive, Model, etc."}),"\n",(0,i.jsx)(a.li,{children:"Supports extract Gravitino dataset from GVFS."}),"\n",(0,i.jsx)(a.li,{children:"Supports Gravitino spark connector and non Gravitino Spark connector."}),"\n"]}),"\n",(0,i.jsx)(a.h2,{id:"gravitino-dataset",children:"Gravitino dataset"}),"\n",(0,i.jsx)(a.p,{children:"The Gravitino OpenLineage Spark plugin transforms the Gravitino metalake name into the dataset namespace. The dataset name varies by dataset type when generating lineage information."}),"\n",(0,i.jsxs)(a.p,{children:["When using the ",(0,i.jsx)(a.a,{href:"/docs/next/spark-connector/spark-connector",children:"Gravitino Spark connector"})," to access tables managed by Gravitino, the dataset name follows this format:"]}),"\n",(0,i.jsxs)(a.table,{children:[(0,i.jsx)(a.thead,{children:(0,i.jsxs)(a.tr,{children:[(0,i.jsx)(a.th,{children:"Dataset Type"}),(0,i.jsx)(a.th,{children:"Dataset name"}),(0,i.jsx)(a.th,{children:"Example"}),(0,i.jsx)(a.th,{children:"Since Version"})]})}),(0,i.jsxs)(a.tbody,{children:[(0,i.jsxs)(a.tr,{children:[(0,i.jsx)(a.td,{children:"Hive catalog"}),(0,i.jsx)(a.td,{children:(0,i.jsx)(a.code,{children:"${GravitinoCatalogName}.${schemaName}.${tableName}"})}),(0,i.jsx)(a.td,{children:(0,i.jsx)(a.code,{children:"hive_catalog.db.student"})}),(0,i.jsx)(a.td,{children:"0.9.0-incubating"})]}),(0,i.jsxs)(a.tr,{children:[(0,i.jsx)(a.td,{children:"Iceberg catalog"}),(0,i.jsx)(a.td,{children:(0,i.jsx)(a.code,{children:"${GravitinoCatalogName}.${schemaName}.${tableName}"})}),(0,i.jsx)(a.td,{children:(0,i.jsx)(a.code,{children:"iceberg_catalog.db.score"})}),(0,i.jsx)(a.td,{children:"0.9.0-incubating"})]}),(0,i.jsxs)(a.tr,{children:[(0,i.jsx)(a.td,{children:"Paimon catalog"}),(0,i.jsx)(a.td,{children:(0,i.jsx)(a.code,{children:"${GravitinoCatalogName}.${schemaName}.${tableName}"})}),(0,i.jsx)(a.td,{children:(0,i.jsx)(a.code,{children:"paimon_catalog.db.detail"})}),(0,i.jsx)(a.td,{children:"0.9.0-incubating"})]}),(0,i.jsxs)(a.tr,{children:[(0,i.jsx)(a.td,{children:"JDBC catalog"}),(0,i.jsx)(a.td,{children:(0,i.jsx)(a.code,{children:"${GravitinoCatalogName}.${schemaName}.${tableName}"})}),(0,i.jsx)(a.td,{children:(0,i.jsx)(a.code,{children:"jdbc_catalog.db.score"})}),(0,i.jsx)(a.td,{children:"0.9.0-incubating"})]})]})]}),"\n",(0,i.jsx)(a.p,{children:"For datasets not managed by Gravitino, the dataset name is as follows:"}),"\n",(0,i.jsxs)(a.table,{children:[(0,i.jsx)(a.thead,{children:(0,i.jsxs)(a.tr,{children:[(0,i.jsx)(a.th,{children:"Dataset Type"}),(0,i.jsx)(a.th,{children:"Dataset name"}),(0,i.jsx)(a.th,{children:"Example"}),(0,i.jsx)(a.th,{children:"Since Version"})]})}),(0,i.jsxs)(a.tbody,{children:[(0,i.jsxs)(a.tr,{children:[(0,i.jsx)(a.td,{children:"Hive"}),(0,i.jsx)(a.td,{children:(0,i.jsx)(a.code,{children:"spark_catalog.${schemaName}.${tableName}"})}),(0,i.jsx)(a.td,{children:(0,i.jsx)(a.code,{children:"spark_catalog.db.table"})}),(0,i.jsx)(a.td,{children:"0.9.0-incubating"})]}),(0,i.jsxs)(a.tr,{children:[(0,i.jsx)(a.td,{children:"Iceberg"}),(0,i.jsx)(a.td,{children:(0,i.jsx)(a.code,{children:"${catalogName}.${schemaName}.${tableName}"})}),(0,i.jsx)(a.td,{children:(0,i.jsx)(a.code,{children:"iceberg_catalog.db.table"})}),(0,i.jsx)(a.td,{children:"0.9.0-incubating"})]}),(0,i.jsxs)(a.tr,{children:[(0,i.jsx)(a.td,{children:"JDBC v2"}),(0,i.jsx)(a.td,{children:(0,i.jsx)(a.code,{children:"${catalogName}.${schemaName}.${tableName}"})}),(0,i.jsx)(a.td,{children:(0,i.jsx)(a.code,{children:"jdbc_catalog.db.table"})}),(0,i.jsx)(a.td,{children:"0.9.0-incubating"})]}),(0,i.jsxs)(a.tr,{children:[(0,i.jsx)(a.td,{children:"JDBC v1"}),(0,i.jsx)(a.td,{children:(0,i.jsx)(a.code,{children:"spark_catalog.${schemaName}.${tableName}"})}),(0,i.jsx)(a.td,{children:(0,i.jsx)(a.code,{children:"spark_catalog.postgres.public.table"})}),(0,i.jsx)(a.td,{children:"0.9.0-incubating"})]})]})]}),"\n",(0,i.jsxs)(a.p,{children:["When accessing datasets by location (e.g., ",(0,i.jsx)(a.code,{children:"SELECT * FROM parquet.${dataset_path}"}),"), the name is derived from the physical path:"]}),"\n",(0,i.jsxs)(a.table,{children:[(0,i.jsx)(a.thead,{children:(0,i.jsxs)(a.tr,{children:[(0,i.jsx)(a.th,{children:"Location Type"}),(0,i.jsx)(a.th,{children:"Dataset name"}),(0,i.jsx)(a.th,{children:"Example"}),(0,i.jsx)(a.th,{children:"Since Version"})]})}),(0,i.jsxs)(a.tbody,{children:[(0,i.jsxs)(a.tr,{children:[(0,i.jsx)(a.td,{children:"GVFS location"}),(0,i.jsx)(a.td,{children:(0,i.jsx)(a.code,{children:"${catalogName}.${schemaName}.${filesetName}"})}),(0,i.jsx)(a.td,{children:(0,i.jsx)(a.code,{children:"fileset_catalog.schema.fileset_a"})}),(0,i.jsx)(a.td,{children:"0.9.0-incubating"})]}),(0,i.jsxs)(a.tr,{children:[(0,i.jsx)(a.td,{children:"Other location"}),(0,i.jsx)(a.td,{children:"location path"}),(0,i.jsx)(a.td,{children:(0,i.jsx)(a.code,{children:"hdfs://127.0.0.1:9000/tmp/a/student"})}),(0,i.jsx)(a.td,{children:"0.9.0-incubating"})]})]})]}),"\n",(0,i.jsxs)(a.p,{children:["For GVFS location, this plugin adds ",(0,i.jsx)(a.code,{children:"fileset-location"})," facets which contains the location path."]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-json",children:'"fileset-location" :\n{\n"location":"${gvfs-virutal-location}",\n"_producer":"https://github.com/datastrato/...",\n"_schemaURL":"https://raw.githubusercontent...."\n}\n'})}),"\n",(0,i.jsx)(a.h2,{id:"how-to-use",children:"How to use"}),"\n",(0,i.jsxs)(a.ol,{children:["\n",(0,i.jsxs)(a.li,{children:["Download ",(0,i.jsx)(a.a,{href:"https://github.com/datastrato/gravitino-openlineage-plugins/tree/main/spark-plugin/",children:"Gravitino OpenLineage plugin jar"})," and place it to the classpath of Spark."]}),"\n",(0,i.jsx)(a.li,{children:"Add configuration to the Spark to enable lineage collection."}),"\n"]}),"\n",(0,i.jsx)(a.p,{children:"Configuration example For Spark shell:"}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-shell",children:'./bin/spark-sql -v \\\n--jars /${path}/openlineage-spark_2.12-${gravitino-specific-version}.jar,/${path}/gravitino-spark-connector-runtime-3.5_2.12-${version}.jar \\\n--conf spark.plugins="org.apache.gravitino.spark.connector.plugin.GravitinoSparkPlugin" \\\n--conf spark.sql.gravitino.uri=http://localhost:8090 \\\n--conf spark.sql.gravitino.metalake=${metalakeName} \\\n--conf spark.extraListeners=io.openlineage.spark.agent.OpenLineageSparkListener \\\n--conf spark.openlineage.transport.type=http \\\n--conf spark.openlineage.transport.url=http://localhost:8090 \\\n--conf spark.openlineage.transport.endpoint=/api/lineage \\\n--conf spark.openlineage.namespace=${metalakeName} \\\n--conf spark.openlineage.appName=${appName} \\\n--conf spark.openlineage.columnLineage.datasetLineageEnabled=true \n'})}),"\n",(0,i.jsxs)(a.p,{children:["Please refer to ",(0,i.jsx)(a.a,{href:"https://openlineage.io/docs/guides/spark/",children:"OpenLineage Spark guides"})," and ",(0,i.jsx)(a.a,{href:"/docs/next/spark-connector/spark-connector",children:"Gravitino Spark connector"})," for more details. Additionally, Gravitino provides following configurations for lineage."]}),"\n",(0,i.jsxs)("table",{children:[(0,i.jsx)("thead",{children:(0,i.jsxs)("tr",{children:[(0,i.jsx)("th",{children:"Configuration item"}),(0,i.jsx)("th",{children:"Description"}),(0,i.jsx)("th",{children:"Default value"}),(0,i.jsx)("th",{children:"Required"}),(0,i.jsx)("th",{children:"Since Version"})]})}),(0,i.jsxs)("tbody",{children:[(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"spark.sql.gravitino.useGravitinoIdentifier"})}),(0,i.jsxs)("td",{children:["Whether to use Gravitino identifier for the dataset not managed by Gravitino. If setting to false, will use origin OpenLineage dataset identifier, like ",(0,i.jsx)("code",{children:"hdfs://localhost:9000"})," as namespace and ",(0,i.jsx)("code",{children:"/path/xx"})," as name for hive table."]}),(0,i.jsx)("td",{children:"True"}),(0,i.jsx)("td",{children:"No"}),(0,i.jsx)("td",{children:"0.9.0-incubating"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"spark.sql.gravitino.catalogMappings"})}),(0,i.jsxs)("td",{children:["Catalog name mapping roles for the dataset not managed by Gravitino. For example ",(0,i.jsxs)("code",{children:["spark_catalog",":catalog1",",iceberg_catalog",":catalog2"]})," maps ",(0,i.jsx)("code",{children:"spark_catalog"})," to ",(0,i.jsx)("code",{children:"catalog1"})," and ",(0,i.jsx)("code",{children:"iceberg_catalog"})," to ",(0,i.jsx)("code",{children:"catalog2"}),", the other catalogs will not be mapped."]}),(0,i.jsx)("td",{children:"None"}),(0,i.jsx)("td",{children:"No"}),(0,i.jsx)("td",{children:"0.9.0-incubating"})]})]})]})]})}function h(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,i.jsx)(a,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}}}]);