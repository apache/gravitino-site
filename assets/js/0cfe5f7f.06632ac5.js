"use strict";(self.webpackChunkapache_website_template=self.webpackChunkapache_website_template||[]).push([[78685],{9339:(e,i,t)=>{t.d(i,{A:()=>n});const n=t.p+"assets/images/create-client-1ddc9fc414cb046e0d2579619d30763d.png"},20984:(e,i,t)=>{t.d(i,{A:()=>n});const n=t.p+"assets/images/pem-7d669432b13e068faef25044ce6cde3d.png"},26405:(e,i,t)=>{t.d(i,{A:()=>n});const n=t.p+"assets/images/create-realm-e11a6a196c82b8abc9f1dcbef5d0777d.png"},39548:(e,i,t)=>{t.d(i,{A:()=>n});const n=t.p+"assets/images/realm-public-key-daa2243c4afc6d1c5a29174afe3aa850.png"},40575:(e,i,t)=>{t.d(i,{A:()=>n});const n=t.p+"assets/images/oauth-d58a2bcf262ce077548b31413bbfcb73.png"},53054:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>d});var n=t(13274),r=t(21943);const s={title:"How to authenticate",slug:"/security/how-to-authenticate",keyword:"security authentication oauth kerberos",license:"This software is licensed under the Apache License version 2."},a=void 0,o={id:"security/how-to-authenticate",title:"How to authenticate",description:"Authentication",source:"@site/docs/security/how-to-authenticate.md",sourceDirName:"security",slug:"/security/how-to-authenticate",permalink:"/docs/next/security/how-to-authenticate",draft:!1,unlisted:!1,editUrl:"https://github.com/apache/gravitino-site/tree/main/docs/security/how-to-authenticate.md",tags:[],version:"current",frontMatter:{title:"How to authenticate",slug:"/security/how-to-authenticate",keyword:"security authentication oauth kerberos",license:"This software is licensed under the Apache License version 2."},sidebar:"docs",previous:{title:"Authorization Push-down",permalink:"/docs/next/security/authorization-push-down"},next:{title:"How to use CORS",permalink:"/docs/next/security/how-to-use-cors"}},c={},d=[{value:"Authentication",id:"authentication",level:2},{value:"Simple mode",id:"simple-mode",level:3},{value:"OAuth mode",id:"oauth-mode",level:3},{value:"Kerberos mode",id:"kerberos-mode",level:3},{value:"Custom mode",id:"custom-mode",level:3},{value:"Server configuration",id:"server-configuration",level:3},{value:"Example: Azure AD as OIDC Provider with JWKS Validation",id:"example-azure-ad-as-oidc-provider-with-jwks-validation",level:3},{value:"Example: Static Key OAuth Provider",id:"example-static-key-oauth-provider",level:3},{value:"Example: JWKS Validation with Default Provider",id:"example-jwks-validation-with-default-provider",level:3},{value:"Example",id:"example",level:3},{value:"Example: Keycloak as OAuth providers",id:"example-keycloak-as-oauth-providers",level:3}];function l(e){const i={a:"a",admonition:"admonition",br:"br",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.h2,{id:"authentication",children:"Authentication"}),"\n",(0,n.jsxs)(i.p,{children:["Apache Gravitino supports three kinds of authentication mechanisms: simple, OAuth and Kerberos.\nIf you don't enable authentication for your client and server explicitly, the user ",(0,n.jsx)(i.code,{children:"anonymous"})," will be used to access the server."]}),"\n",(0,n.jsx)(i.h3,{id:"simple-mode",children:"Simple mode"}),"\n",(0,n.jsxs)(i.p,{children:["In simple mode, the client uses the value of the ",(0,n.jsx)(i.code,{children:"GRAVITINO_USER"})," environment variable as the username.\nIf the environment variable ",(0,n.jsx)(i.code,{children:"GRAVITINO_USER"})," in the client isn't set, the client defaults to the username of the user logged into the machine sending the requests."]}),"\n",(0,n.jsxs)(i.p,{children:["For the client side, users can enable ",(0,n.jsx)(i.code,{children:"simple"})," mode by the following code:"]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-java",children:'GravitinoClient client = GravitinoClient.builder(uri)\n    .withMetalake("metalake")\n    .withSimpleAuth()\n    .build();\n'})}),"\n",(0,n.jsx)(i.p,{children:"Additionally, the username can be directly used as a parameter to create a client."}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-java",children:'GravitinoClient client = GravitinoClient.builder(uri)\n    .withMetalake("metalake")\n    .withSimpleAuth("test_user_name")\n    .build();\n'})}),"\n",(0,n.jsx)(i.h3,{id:"oauth-mode",children:"OAuth mode"}),"\n",(0,n.jsx)(i.p,{children:"Gravitino supports external OAuth 2.0 servers with two token validation methods:"}),"\n",(0,n.jsxs)(i.ol,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Static signing key validation"})," - Uses a pre-configured signing key to validate JWT tokens"]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"JWKS-based validation"})," - Dynamically fetches public keys from OAuth provider's JWKS endpoint (supports OIDC providers like Azure AD, and other JWKS-compatible providers)"]}),"\n"]}),"\n",(0,n.jsx)(i.p,{children:"To enable OAuth mode:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"First, ensure the external OAuth 2.0 server supports Bearer JWT tokens."}),"\n",(0,n.jsxs)(i.li,{children:["For ",(0,n.jsx)(i.strong,{children:"static key validation"}),": Configure ",(0,n.jsx)(i.code,{children:"gravitino.authenticator.oauth.defaultSignKey"}),", ",(0,n.jsx)(i.code,{children:"gravitino.authenticator.oauth.serverUri"})," and ",(0,n.jsx)(i.code,{children:"gravitino.authenticator.oauth.tokenPath"}),"."]}),"\n",(0,n.jsxs)(i.li,{children:["For ",(0,n.jsx)(i.strong,{children:"JWKS validation"}),": Configure ",(0,n.jsx)(i.code,{children:"gravitino.authenticator.oauth.jwksUri"})," and ",(0,n.jsx)(i.code,{children:"gravitino.authenticator.oauth.tokenValidatorClass=org.apache.gravitino.server.authentication.JwksTokenValidator"}),". You can use either ",(0,n.jsx)(i.code,{children:"gravitino.authenticator.oauth.provider=default"})," or ",(0,n.jsx)(i.code,{children:"gravitino.authenticator.oauth.provider=oidc"})," depending on whether you want Web UI OIDC login flow."]}),"\n",(0,n.jsxs)(i.li,{children:["For ",(0,n.jsx)(i.strong,{children:"Web UI OIDC authentication"}),": Set ",(0,n.jsx)(i.code,{children:"gravitino.authenticator.oauth.provider=oidc"})," and configure ",(0,n.jsx)(i.code,{children:"gravitino.authenticator.oauth.clientId"}),", ",(0,n.jsx)(i.code,{children:"gravitino.authenticator.oauth.authority"}),", and ",(0,n.jsx)(i.code,{children:"gravitino.authenticator.oauth.scope"}),". These settings are exposed to the Web UI via the ",(0,n.jsx)(i.code,{children:"/configs"})," endpoint to enable OAuth login flow. Configure your OAuth provider with the callback redirect URI: ",(0,n.jsx)(i.code,{children:"https://your-gravitino-server/ui/oauth/callback"}),"."]}),"\n",(0,n.jsxs)(i.li,{children:["Next, for the client side, users can enable ",(0,n.jsx)(i.code,{children:"OAuth"})," mode by the following code:"]}),"\n"]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-java",children:'DefaultOAuth2TokenProvider authDataProvider = DefaultOAuth2TokenProvider.builder()\n    .withUri("oauth server uri")\n    .withCredential("yy:xx")\n    .withPath("oauth/token")\n    .withScope("test")\n    .build();\n\nGravitinoClient client = GravitinoClient.builder(uri)\n    .withMetalake("metalake")\n    .withOAuth(authDataProvider)\n    .build();\n'})}),"\n",(0,n.jsx)(i.h3,{id:"kerberos-mode",children:"Kerberos mode"}),"\n",(0,n.jsxs)(i.p,{children:["To enable Kerberos mode, users must ensure that the server and client have the correct Kerberos configuration. On the server side, users should set ",(0,n.jsx)(i.code,{children:"gravitino.authenticators"})," as ",(0,n.jsx)(i.code,{children:"kerberos"})," and give\n",(0,n.jsx)(i.code,{children:"gravitino.authenticator.kerberos.principal"})," and ",(0,n.jsx)(i.code,{children:"gravitino.authenticator.kerberos.keytab"})," a proper value. For the client side, users can enable ",(0,n.jsx)(i.code,{children:"kerberos"})," mode by the following code:"]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-java",children:'// Use keytab to create KerberosTokenProvider\nKerberosTokenProvider provider = KerberosTokenProvider.builder()\n        .withClientPrincipal(clientPrincipal)\n        .withKeyTabFile(new File(keytabFile))\n        .build();\n\n// Use ticketCache to create KerberosTokenProvider\nKerberosTokenProvider provider = KerberosTokenProvider.builder()\n        .withClientPrincipal(clientPrincipal)\n        .build();        \n\nGravitinoClient client = GravitinoClient.builder(uri)\n    .withMetalake("metalake")\n    .withKerberosAuth(provider)\n    .build();\n'})}),"\n",(0,n.jsx)(i.admonition,{type:"info",children:(0,n.jsx)(i.p,{children:"Currently, the Iceberg REST service does not support Kerberos authentication.\nThe URI must be the server's hostname instead of its IP address."})}),"\n",(0,n.jsx)(i.h3,{id:"custom-mode",children:"Custom mode"}),"\n",(0,n.jsxs)(i.p,{children:["Gravitino also supports custom authentication implementations.\nFor server side, you can implement the interface ",(0,n.jsx)(i.code,{children:"Authenticator"})," and specify ",(0,n.jsx)(i.code,{children:"gravitino.authenciators"}),".\nFor client side, you extend the abstract class ",(0,n.jsx)(i.code,{children:"CustomTokenProvider"})," and specify the token provider."]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-java",children:'GravitinoClient client = GravitinoClient.builder(uri)\n    .withMetalake("metalake")\n    .withCustomProvider(provider)\n    .build();\n'})}),"\n",(0,n.jsx)(i.h3,{id:"server-configuration",children:"Server configuration"}),"\n",(0,n.jsxs)(i.p,{children:["Gravitino server and Gravitino Iceberg REST server share the same configuration items, you doesn't need to add ",(0,n.jsx)(i.code,{children:"gravitino.iceberg-rest"})," prefix for Gravitino Iceberg REST server."]}),"\n",(0,n.jsxs)(i.table,{children:[(0,n.jsx)(i.thead,{children:(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.th,{children:"Configuration item"}),(0,n.jsx)(i.th,{children:"Description"}),(0,n.jsx)(i.th,{children:"Default value"}),(0,n.jsx)(i.th,{children:"Required"}),(0,n.jsx)(i.th,{children:"Since version"})]})}),(0,n.jsxs)(i.tbody,{children:[(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"gravitino.authenticator"})}),(0,n.jsxs)(i.td,{children:["It is deprecated since Gravitino 0.6.0. Please use ",(0,n.jsx)(i.code,{children:"gravitino.authenticators"})," instead."]}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"simple"})}),(0,n.jsx)(i.td,{children:"No"}),(0,n.jsx)(i.td,{children:"0.3.0"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"gravitino.authenticators"})}),(0,n.jsxs)(i.td,{children:["The authenticators which Gravitino uses, setting as ",(0,n.jsx)(i.code,{children:"simple"}),",",(0,n.jsx)(i.code,{children:"oauth"})," or ",(0,n.jsx)(i.code,{children:"kerberos"}),". Multiple authenticators are separated by commas. If a request is supported by multiple authenticators simultaneously, the first authenticator will be used by default."]}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"simple"})}),(0,n.jsx)(i.td,{children:"No"}),(0,n.jsx)(i.td,{children:"0.6.0-incubating"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"gravitino.authenticator.oauth.serviceAudience"})}),(0,n.jsx)(i.td,{children:"The audience name when Gravitino uses OAuth as the authenticator."}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"GravitinoServer"})}),(0,n.jsx)(i.td,{children:"No"}),(0,n.jsx)(i.td,{children:"0.3.0"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"gravitino.authenticator.oauth.allowSkewSecs"})}),(0,n.jsx)(i.td,{children:"The JWT allows skew seconds when Gravitino uses OAuth as the authenticator."}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"0"})}),(0,n.jsx)(i.td,{children:"No"}),(0,n.jsx)(i.td,{children:"0.3.0"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"gravitino.authenticator.oauth.defaultSignKey"})}),(0,n.jsx)(i.td,{children:"The signing key of JWT when Gravitino uses OAuth as the authenticator."}),(0,n.jsx)(i.td,{children:"(none)"}),(0,n.jsxs)(i.td,{children:["Yes if use ",(0,n.jsx)(i.code,{children:"oauth"})," as the authenticator"]}),(0,n.jsx)(i.td,{children:"0.3.0"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"gravitino.authenticator.oauth.signAlgorithmType"})}),(0,n.jsx)(i.td,{children:"The signature algorithm when Gravitino uses OAuth as the authenticator."}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"RS256"})}),(0,n.jsx)(i.td,{children:"No"}),(0,n.jsx)(i.td,{children:"0.3.0"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"gravitino.authenticator.oauth.serverUri"})}),(0,n.jsx)(i.td,{children:"The URI of the default OAuth server."}),(0,n.jsx)(i.td,{children:"(none)"}),(0,n.jsxs)(i.td,{children:["Yes if use ",(0,n.jsx)(i.code,{children:"oauth"})," as the authenticator"]}),(0,n.jsx)(i.td,{children:"0.3.0"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"gravitino.authenticator.oauth.tokenPath"})}),(0,n.jsx)(i.td,{children:"The path for token of the default OAuth server."}),(0,n.jsx)(i.td,{children:"(none)"}),(0,n.jsxs)(i.td,{children:["Yes if use ",(0,n.jsx)(i.code,{children:"oauth"})," as the authenticator"]}),(0,n.jsx)(i.td,{children:"0.3.0"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"gravitino.authenticator.oauth.provider"})}),(0,n.jsx)(i.td,{children:"OAuth provider type (default, oidc). Determines the Web UI authentication flow. Use 'oidc' for Web UI OIDC login, 'default' for legacy login or API-only authentication."}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"default"})}),(0,n.jsx)(i.td,{children:"No"}),(0,n.jsx)(i.td,{children:"1.0.0"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"gravitino.authenticator.oauth.clientId"})}),(0,n.jsx)(i.td,{children:"OAuth client ID for Web UI authentication."}),(0,n.jsx)(i.td,{children:"(none)"}),(0,n.jsxs)(i.td,{children:["Yes if provider is ",(0,n.jsx)(i.code,{children:"oidc"})]}),(0,n.jsx)(i.td,{children:"1.0.0"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"gravitino.authenticator.oauth.authority"})}),(0,n.jsx)(i.td,{children:"OAuth authority/issuer URL for OIDC providers for web UI authentication. (e.g., Azure AD tenant URL)."}),(0,n.jsx)(i.td,{children:"(none)"}),(0,n.jsxs)(i.td,{children:["Yes if provider is ",(0,n.jsx)(i.code,{children:"oidc"})]}),(0,n.jsx)(i.td,{children:"1.0.0"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"gravitino.authenticator.oauth.scope"})}),(0,n.jsx)(i.td,{children:"OAuth scopes for Web UI authentication (space-separated)."}),(0,n.jsx)(i.td,{children:"(none)"}),(0,n.jsxs)(i.td,{children:["Yes if provider is ",(0,n.jsx)(i.code,{children:"oidc"})]}),(0,n.jsx)(i.td,{children:"1.0.0"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"gravitino.authenticator.oauth.jwksUri"})}),(0,n.jsx)(i.td,{children:"JWKS URI for server-side OAuth token validation. Required when using JWKS-based validation."}),(0,n.jsx)(i.td,{children:"(none)"}),(0,n.jsxs)(i.td,{children:["Yes if ",(0,n.jsx)(i.code,{children:"tokenValidatorClass"})," is ",(0,n.jsx)(i.code,{children:"org.apache.gravitino.server.authentication.JwksTokenValidator"})]}),(0,n.jsx)(i.td,{children:"1.0.0"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"gravitino.authenticator.oauth.principalFields"})}),(0,n.jsx)(i.td,{children:"JWT claim field(s) to use as principal identity. Comma-separated list for fallback in order (e.g., 'preferred_username,email,sub')."}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"sub"})}),(0,n.jsx)(i.td,{children:"No"}),(0,n.jsx)(i.td,{children:"1.0.0"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"gravitino.authenticator.oauth.tokenValidatorClass"})}),(0,n.jsxs)(i.td,{children:["Fully qualified class name of the OAuth token validator implementation. Use ",(0,n.jsx)(i.code,{children:"org.apache.gravitino.server.authentication.JwksTokenValidator"})," for JWKS-based validation or ",(0,n.jsx)(i.code,{children:"org.apache.gravitino.server.authentication.StaticSignKeyValidator"})," for static key validation."]}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"org.apache.gravitino.server.authentication.StaticSignKeyValidator"})}),(0,n.jsx)(i.td,{children:"No"}),(0,n.jsx)(i.td,{children:"1.0.0"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"gravitino.authenticator.kerberos.principal"})}),(0,n.jsxs)(i.td,{children:["Indicates the Kerberos principal to be used for HTTP endpoint. Principal should start with ",(0,n.jsx)(i.code,{children:"HTTP/"}),"."]}),(0,n.jsx)(i.td,{children:"(none)"}),(0,n.jsxs)(i.td,{children:["Yes if use ",(0,n.jsx)(i.code,{children:"kerberos"})," as the authenticator"]}),(0,n.jsx)(i.td,{children:"0.4.0"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:(0,n.jsx)(i.code,{children:"gravitino.authenticator.kerberos.keytab"})}),(0,n.jsx)(i.td,{children:"Location of the keytab file with the credentials for the principal."}),(0,n.jsx)(i.td,{children:"(none)"}),(0,n.jsxs)(i.td,{children:["Yes if use ",(0,n.jsx)(i.code,{children:"kerberos"})," as the authenticator"]}),(0,n.jsx)(i.td,{children:"0.4.0"})]})]})]}),"\n",(0,n.jsx)(i.p,{children:"The signature algorithms that Gravitino supports follows:"}),"\n",(0,n.jsxs)(i.table,{children:[(0,n.jsx)(i.thead,{children:(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.th,{children:"Name"}),(0,n.jsx)(i.th,{children:"Description"})]})}),(0,n.jsxs)(i.tbody,{children:[(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"HS256"}),(0,n.jsx)(i.td,{children:"HMAC using SHA-25A"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"HS384"}),(0,n.jsx)(i.td,{children:"HMAC using SHA-384"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"HS512"}),(0,n.jsx)(i.td,{children:"HMAC using SHA-51"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"RS256"}),(0,n.jsx)(i.td,{children:"RSASSA-PKCS-v1_5 using SHA-256"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"RS384"}),(0,n.jsx)(i.td,{children:"RSASSA-PKCS-v1_5 using SHA-384"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"RS512"}),(0,n.jsx)(i.td,{children:"RSASSA-PKCS-v1_5 using SHA-512"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"ES256"}),(0,n.jsx)(i.td,{children:"ECDSA using P-256 and SHA-256"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"ES384"}),(0,n.jsx)(i.td,{children:"ECDSA using P-384 and SHA-384"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"ES512"}),(0,n.jsx)(i.td,{children:"ECDSA using P-521 and SHA-512"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"PS256"}),(0,n.jsx)(i.td,{children:"RSASSA-PSS using SHA-256 and MGF1 with SHA-256"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"PS384"}),(0,n.jsx)(i.td,{children:"RSASSA-PSS using SHA-384 and MGF1 with SHA-384"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"PS512"}),(0,n.jsx)(i.td,{children:"RSASSA-PSS using SHA-512 and MGF1 with SHA-512"})]})]})]}),"\n",(0,n.jsx)(i.h3,{id:"example-azure-ad-as-oidc-provider-with-jwks-validation",children:"Example: Azure AD as OIDC Provider with JWKS Validation"}),"\n",(0,n.jsx)(i.p,{children:"This example shows how to configure Gravitino with Azure AD using JWKS-based token validation."}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.strong,{children:"Prerequisites:"})}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"Azure AD tenant with an application registration"}),"\n",(0,n.jsxs)(i.li,{children:["Application configured with:","\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"Client ID (Application ID)"}),"\n",(0,n.jsxs)(i.li,{children:["Redirect URI: ",(0,n.jsx)(i.code,{children:"https://your-gravitino-server/ui/oauth/callback"})]}),"\n",(0,n.jsxs)(i.li,{children:["Required API permissions/scopes (typically ",(0,n.jsx)(i.code,{children:"openid"}),", ",(0,n.jsx)(i.code,{children:"profile"}),", ",(0,n.jsx)(i.code,{children:"email"}),")"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.strong,{children:"Configuration:"})}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-text",children:"# Enable OAuth authentication\ngravitino.authenticators = oauth\n\n# OIDC Provider Configuration for Web UI\ngravitino.authenticator.oauth.provider = oidc\ngravitino.authenticator.oauth.clientId = <your-azure-app-client-id>\ngravitino.authenticator.oauth.authority = https://sts.windows.net/<your-tenant-id>/\ngravitino.authenticator.oauth.scope = openid profile email\n\n# JWKS-based Token Validation\ngravitino.authenticator.oauth.jwksUri = https://login.microsoftonline.com/<your-tenant-id>/discovery/v2.0/keys\ngravitino.authenticator.oauth.tokenValidatorClass = org.apache.gravitino.server.authentication.JwksTokenValidator\ngravitino.authenticator.oauth.serviceAudience = <your-azure-app-client-id-or-api-identifier>\ngravitino.authenticator.oauth.principalFields = preferred_username,email,sub\n"})}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.strong,{children:"Usage:"})}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"Web UI"}),": Navigate to Gravitino Web UI, which will redirect to Azure AD for authentication"]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.strong,{children:"API Access"}),": Use Azure AD tokens in the ",(0,n.jsx)(i.code,{children:"Authorization: Bearer <token>"})," header"]}),"\n"]}),"\n",(0,n.jsxs)(i.admonition,{type:"note",children:[(0,n.jsxs)(i.p,{children:["The ",(0,n.jsx)(i.code,{children:"serviceAudience"})," should match the ",(0,n.jsx)(i.code,{children:"aud"})," claim in your Azure AD tokens. This is typically your Azure AD application's client ID, but could be a custom API identifier if you've configured custom API scopes (e.g., ",(0,n.jsx)(i.code,{children:"api://<client-id>"}),")."]}),(0,n.jsxs)(i.p,{children:["The ",(0,n.jsx)(i.code,{children:"principalFields"})," supports multiple fallback options. Gravitino will try each field in order (e.g., first ",(0,n.jsx)(i.code,{children:"preferred_username"}),", then ",(0,n.jsx)(i.code,{children:"email"}),", then ",(0,n.jsx)(i.code,{children:"sub"}),") until it finds a non-null value to use as the user identity."]}),(0,n.jsxs)(i.p,{children:["With JWKS validation, you don't need to configure ",(0,n.jsx)(i.code,{children:"defaultSignKey"}),", ",(0,n.jsx)(i.code,{children:"serverUri"}),", or ",(0,n.jsx)(i.code,{children:"tokenPath"})," as the validator dynamically fetches public keys from Azure AD's JWKS endpoint."]})]}),"\n",(0,n.jsx)(i.h3,{id:"example-static-key-oauth-provider",children:"Example: Static Key OAuth Provider"}),"\n",(0,n.jsx)(i.p,{children:"For compatibility with existing OAuth servers that don't support JWKS:"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-text",children:"gravitino.authenticators = oauth\ngravitino.authenticator.oauth.provider = default\ngravitino.authenticator.oauth.clientId = test\ngravitino.authenticator.oauth.scope = test\ngravitino.authenticator.oauth.serviceAudience = test\ngravitino.authenticator.oauth.tokenValidatorClass = org.apache.gravitino.server.authentication.StaticSignKeyValidator\ngravitino.authenticator.oauth.serverUri = http://your-oauth-server\ngravitino.authenticator.oauth.tokenPath = /oauth2/token\ngravitino.authenticator.oauth.defaultSignKey = <your-static-signing-key>\n"})}),"\n",(0,n.jsx)(i.h3,{id:"example-jwks-validation-with-default-provider",children:"Example: JWKS Validation with Default Provider"}),"\n",(0,n.jsx)(i.p,{children:"For JWKS-based token validation without Web UI OIDC workflow:"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-text",children:"gravitino.authenticators = oauth\ngravitino.authenticator.oauth.provider = default\ngravitino.authenticator.oauth.serviceAudience = <your-audience>\ngravitino.authenticator.oauth.tokenValidatorClass = org.apache.gravitino.server.authentication.JwksTokenValidator\ngravitino.authenticator.oauth.jwksUri = https://your-oauth-provider/.well-known/jwks.json\n"})}),"\n",(0,n.jsx)(i.h3,{id:"example",children:"Example"}),"\n",(0,n.jsx)(i.p,{children:"You can follow the steps to set up an OAuth mode Gravitino server."}),"\n",(0,n.jsxs)(i.ol,{children:["\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsx)(i.p,{children:"Prerequisite"}),"\n",(0,n.jsx)(i.p,{children:"You need to install the JDK8 and Docker."}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsx)(i.p,{children:"Set up an external OAuth 2.0 server"}),"\n",(0,n.jsxs)(i.p,{children:["There is a sample-authorization-server based on ",(0,n.jsx)(i.a,{href:"https://github.com/spring-projects/spring-authorization-server/tree/1.0.3",children:"spring-authorization-server"}),". The image has registered client information in the external OAuth 2.0 server\nand its clientId is ",(0,n.jsx)(i.code,{children:"test"}),", secret is ",(0,n.jsx)(i.code,{children:"test"}),", scope is ",(0,n.jsx)(i.code,{children:"test"}),"."]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-shell",children:" docker run -p 8177:8177 --name sample-auth-server -d datastrato/sample-authorization-server:0.3.0\n"})}),"\n",(0,n.jsxs)(i.ol,{start:"3",children:["\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:["Open ",(0,n.jsx)(i.a,{href:"http://localhost:8177/oauth2/jwks",children:"the JWK URL of the Authorization server"})," in the browser and you can get the JWK."]}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.img,{alt:"jks_response_image",src:t(92234).A+"",width:"2303",height:"199"})}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:["Convert the JWK to PEM. You can use the ",(0,n.jsx)(i.a,{href:"https://8gwifi.org/jwkconvertfunctions.jsp#google_vignette",children:"online tool"})," or other tools."]}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.img,{alt:"pem_convert_result_image",src:t(20984).A+"",width:"1530",height:"1262"})}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:["Copy the public key and remove the character ",(0,n.jsx)(i.code,{children:"\\n"})," and you can get the default signing key of Gravitino server."]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:["Refer to the ",(0,n.jsx)(i.a,{href:"/docs/next/gravitino-server-config",children:"Configurations"})," and append the configurations to the conf/gravitino.conf."]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-text",children:"gravitino.authenticators = oauth\ngravitino.authenticator.oauth.serviceAudience = test\ngravitino.authenticator.oauth.defaultSignKey = <the default signing key>\ngravitino.authenticator.oauth.tokenPath = /oauth2/token\ngravitino.authenticator.oauth.serverUri = http://localhost:8177\n"})}),"\n",(0,n.jsxs)(i.ol,{start:"7",children:["\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:["Open ",(0,n.jsx)(i.a,{href:"http://localhost:8090",children:"the URL of Gravitino server"})," and login in with clientId ",(0,n.jsx)(i.code,{children:"test"}),", clientSecret ",(0,n.jsx)(i.code,{children:"test"}),", and scope ",(0,n.jsx)(i.code,{children:"test"}),"."]}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.img,{alt:"oauth_login_image",src:t(40575).A+"",width:"1133",height:"1211"})}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsx)(i.p,{children:"You can also use the curl command to access Gravitino."}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(i.p,{children:"Get access token"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-shell",children:"curl --location --request POST 'http://127.0.0.1:8177/oauth2/token?grant_type=client_credentials&client_id=test&client_secret=test&scope=test'\n"})}),"\n",(0,n.jsx)(i.p,{children:"Use the access token to request the Gravitino"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-shell",children:'curl -v -X GET -H "Accept: application/vnd.gravitino.v1+json" -H "Content-Type: application/json" -H "Authorization: Bearer <access_token>" http://localhost:8090/api/version\n'})}),"\n",(0,n.jsx)(i.h3,{id:"example-keycloak-as-oauth-providers",children:"Example: Keycloak as OAuth providers"}),"\n",(0,n.jsxs)(i.ol,{children:["\n",(0,n.jsxs)(i.li,{children:["Set up an external Keycloak server, you can refer to ",(0,n.jsx)(i.a,{href:"https://www.keycloak.org/getting-started/getting-started-docker",children:"Keycloak document"})]}),"\n"]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-shell",children:"docker run -dti -p 8080:8080 -e KC_BOOTSTRAP_ADMIN_USERNAME=admin -e KC_BOOTSTRAP_ADMIN_PASSWORD=admin quay.io/keycloak/keycloak:26.2.5 start-dev\n"})}),"\n",(0,n.jsxs)(i.ol,{start:"2",children:["\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:["Go to the ",(0,n.jsx)(i.a,{href:"http://localhost:8080/",children:"Keycloak admin console"}),", log in with the initial admin user with the username ",(0,n.jsx)(i.code,{children:"admin"})," and password ",(0,n.jsx)(i.code,{children:"admin"})]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsx)(i.p,{children:"Create a realm for Gravitino"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["Click ",(0,n.jsx)(i.em,{children:"Manage realms"})," in the left-hand menu."]}),"\n",(0,n.jsxs)(i.li,{children:["Click ",(0,n.jsx)(i.em,{children:"Create realm"})," button"]}),"\n"]}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.img,{alt:"create-realm.png",src:t(26405).A+"",width:"827",height:"570"})}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:["Get the ",(0,n.jsx)(i.code,{children:"gravitinorealm"})," public key, which is the ",(0,n.jsx)(i.code,{children:"<the default signing key>"})," in gravitino.conf\nAccess ",(0,n.jsx)(i.code,{children:"http://localhost:8080/realms/gravitinorealm"})," in browser"]}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.img,{alt:"realm-public-key.png",src:t(39548).A+"",width:"1512",height:"171"})}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsx)(i.p,{children:"Add users"}),"\n",(0,n.jsx)(i.p,{children:"Initially, the realm has no users. Use these steps to create a user:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["Verify that you are still in the gravitinorealm realm, which is next to ",(0,n.jsx)(i.em,{children:"Current realm"}),"."]}),"\n",(0,n.jsx)(i.li,{children:"Click Users in the left-hand menu."}),"\n",(0,n.jsxs)(i.li,{children:["Click ",(0,n.jsx)(i.em,{children:"Create new user"}),"."]}),"\n",(0,n.jsxs)(i.li,{children:["Fill in the form with the following values:",(0,n.jsx)(i.br,{}),"\n",(0,n.jsx)(i.em,{children:"Username"}),": usera, ",(0,n.jsx)(i.em,{children:"First name"}),": any first name, ",(0,n.jsx)(i.em,{children:"Last name"}),": any last name, ",(0,n.jsx)(i.em,{children:"Email"}),": any email"]}),"\n",(0,n.jsxs)(i.li,{children:["Click ",(0,n.jsx)(i.em,{children:"credentials"}),", fill in the ",(0,n.jsx)(i.em,{children:"Set password form"})," with a password."]}),"\n",(0,n.jsx)(i.li,{children:"Toggle Temporary to Off so that the user does not need to update this password at the first login."}),"\n"]}),"\n",(0,n.jsxs)(i.p,{children:["You can now log in to the ",(0,n.jsx)(i.a,{href:"http://localhost:8080/realms/gravitinorealm/account",children:"Account Console(gravitinorealm)"})," to verify this user is configured correctly."]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsx)(i.p,{children:"Register Gravitino in Keycloak"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["Click ",(0,n.jsx)(i.em,{children:"gravitinorealm"})," next to ",(0,n.jsx)(i.em,{children:"Current realm"}),"."]}),"\n",(0,n.jsxs)(i.li,{children:["Click ",(0,n.jsx)(i.em,{children:"Clients"}),"."]}),"\n",(0,n.jsxs)(i.li,{children:["Click ",(0,n.jsx)(i.em,{children:"Create client"})]}),"\n",(0,n.jsxs)(i.li,{children:["Fill in ",(0,n.jsx)(i.em,{children:"Client type"}),": ",(0,n.jsx)(i.code,{children:"OpenID Connect"})," ",(0,n.jsx)(i.em,{children:"Client ID"}),": ",(0,n.jsx)(i.code,{children:"gravitino-client"})]}),"\n",(0,n.jsxs)(i.li,{children:["Click ",(0,n.jsx)(i.em,{children:"Next"})]}),"\n",(0,n.jsxs)(i.li,{children:["Confirm that ",(0,n.jsx)(i.code,{children:"Client authentication"})," ",(0,n.jsx)(i.code,{children:"Standard flow"})," ",(0,n.jsx)(i.code,{children:"Direct access grants"})," ",(0,n.jsx)(i.code,{children:"Service accounts roles"})," is enabled."]}),"\n",(0,n.jsxs)(i.li,{children:["Click ",(0,n.jsx)(i.em,{children:"Next"})]}),"\n",(0,n.jsxs)(i.li,{children:["Set ",(0,n.jsx)(i.em,{children:"Valid redirect URIs"})," to ",(0,n.jsx)(i.code,{children:"http://localhost:8090/*"})]}),"\n",(0,n.jsxs)(i.li,{children:["Set ",(0,n.jsx)(i.em,{children:"Web origins"})," to ",(0,n.jsx)(i.code,{children:"http://localhost:8090"})]}),"\n",(0,n.jsxs)(i.li,{children:["Click ",(0,n.jsx)(i.em,{children:"Save"}),"."]}),"\n",(0,n.jsxs)(i.li,{children:["Click ",(0,n.jsx)(i.em,{children:"Credentials"})," tab page, get ",(0,n.jsx)(i.code,{children:"Client Secret"}),"."]}),"\n"]}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.img,{alt:"create-client.png",src:t(9339).A+"",width:"837",height:"367"})}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:["You can refer to the ",(0,n.jsx)(i.a,{href:"/docs/next/gravitino-server-config",children:"Configurations"})," and append the configurations to the conf/gravitino.conf."]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-text",children:"gravitino.authenticators = oauth\ngravitino.authenticator.oauth.serviceAudience = account\ngravitino.authenticator.oauth.defaultSignKey = <the default signing key>\ngravitino.authenticator.oauth.tokenPath = /realms/gravitinorealm/protocol/openid-connect/token\ngravitino.authenticator.oauth.serverUri = http://localhost:8080\n"})}),"\n",(0,n.jsxs)(i.ol,{start:"8",children:["\n",(0,n.jsxs)(i.li,{children:["Use client credentials to authenticate. The ",(0,n.jsx)(i.code,{children:"access token"})," is bound to a service account."]}),"\n"]}),"\n",(0,n.jsx)(i.p,{children:"Get access token"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-shell",children:'curl \\\n  -d "client_id=gravitino-client" \\\n  -d "client_secret=FL20ezBgQAOlDQeNifzwliQ56wohhqNo" \\\n  -d "grant_type=client_credentials" \\\n  "http://localhost:8080/realms/gravitinorealm/protocol/openid-connect/token"\n'})}),"\n",(0,n.jsx)(i.p,{children:"Use the access token to request the Gravitino"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-shell",children:'curl -v -X GET -H "Accept: application/vnd.gravitino.v1+json" -H "Content-Type: application/json" -H "Authorization: Bearer <access_token>" http://localhost:8090/api/version\n'})}),"\n",(0,n.jsxs)(i.ol,{start:"9",children:["\n",(0,n.jsxs)(i.li,{children:["Use password to authenticate users. The openid scope returns an ",(0,n.jsx)(i.code,{children:"id_token"})," that includes user information which can be used for consumer mapping and group mapping in future posts."]}),"\n"]}),"\n",(0,n.jsx)(i.p,{children:"Get access token"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-shell",children:'curl \\\n  -d "client_id=gravitino-client" \\\n  -d "client_secret=FL20ezBgQAOlDQeNifzwliQ56wohhqNo" \\\n  -d "username=usera" \\\n  -d "password=Admin@123" \\\n  -d "grant_type=password" \\\n  -d "scope=openid" \\\n  "http://localhost:8080/realms/gravitinorealm/protocol/openid-connect/token"\n'})}),"\n",(0,n.jsx)(i.p,{children:"Use the access token to make requests to the Gravitino server:"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-shell",children:'curl -v -X GET -H "Accept: application/vnd.gravitino.v1+json" -H "Content-Type: application/json" -H "Authorization: Bearer <access_token>" http://localhost:8090/api/version\n'})}),"\n",(0,n.jsx)(i.p,{children:"For Gravitino Iceberg REST Service, the 'Accept: application/vnd.gravitino.v1+json' header is not required,  you could use following command:"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-shell",children:'curl -v -X GET -H "Content-Type: application/json" -H "Authorization: Bearer <access_token>" http://127.0.0.1:9001/iceberg/v1/config\n'})})]})}function h(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},92234:(e,i,t)=>{t.d(i,{A:()=>n});const n=t.p+"assets/images/jks-995eb0b7c2ca4f7f4f1e28ebae5e3144.png"}}]);