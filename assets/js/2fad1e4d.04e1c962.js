"use strict";(self.webpackChunkapache_website_template=self.webpackChunkapache_website_template||[]).push([[78474],{97818:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>_,contentTitle:()=>b,default:()=>q,frontMatter:()=>y,metadata:()=>v,toc:()=>N});var i=a(13274),t=a(20527),r=a(23484),n=a.n(r),c=(a(2688),a(57824)),l=a.n(c),o=(a(31078),a(31740)),p=a.n(o),m=(a(18285),a(39582)),d=a.n(m),h=a(15996),x=a.n(h),g=a(20895),j=a.n(g),u=a(79077),f=(a(81777),a(77167));const y={id:"post-run-event",title:"Post runEvent",description:"Updates a run state for a job.",sidebar_label:"Post runEvent",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/api/rest/gravitino-rest-api",custom_edit_url:null},b=void 0,v={id:"api/rest/post-run-event",title:"Post runEvent",description:"Updates a run state for a job.",source:"@site/versioned_docs/version-0.9.0-incubating/api/rest/post-run-event.api.mdx",sourceDirName:"api/rest",slug:"/api/rest/post-run-event",permalink:"/docs/0.9.0-incubating/api/rest/post-run-event",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"0.9.0-incubating",frontMatter:{id:"post-run-event",title:"Post runEvent",description:"Updates a run state for a job.",sidebar_label:"Post runEvent",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/api/rest/gravitino-rest-api",custom_edit_url:null},sidebar:"docs",previous:{title:"delete model version by alias",permalink:"/docs/0.9.0-incubating/api/rest/delete-model-version-by-alias"},next:{title:"How to build",permalink:"/docs/0.9.0-incubating/how-to-build"}},_={},N=[];function L(e){const s={p:"p",strong:"strong",...(0,t.R)(),...e.components},{Details:a}=s;return a||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(u.default,{as:"h1",className:"openapi__heading",children:"Post runEvent"}),"\n",(0,i.jsx)(l(),{method:"post",path:"/lineage"}),"\n",(0,i.jsx)(s.p,{children:"Updates a run state for a job."}),"\n",(0,i.jsx)(u.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,i.jsx)(p(),{className:"openapi-tabs__mime",children:(0,i.jsx)(f.default,{label:"application/json",value:"application/json-schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details mime","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-mime",children:(0,i.jsx)("h3",{className:"openapi-markdown__details-summary-header-body",children:(0,i.jsx)(s.p,{children:"Body"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,i.jsxs)("div",{children:[(0,i.jsx)("span",{className:"badge badge--info",style:{marginBottom:"1rem"},children:(0,i.jsx)(s.p,{children:"oneOf"})}),(0,i.jsxs)(j(),{children:[(0,i.jsxs)(f.default,{label:"RunEvent",value:"0-item-properties",children:[(0,i.jsx)(x(),{collapsible:!1,name:"eventTime",required:!0,schemaName:"date-time",qualifierMessage:void 0,schema:{description:"the time the event occurred at",type:"string",format:"date-time"}}),(0,i.jsx)(x(),{collapsible:!1,name:"producer",required:!0,schemaName:"uri",qualifierMessage:void 0,schema:{description:"URI identifying the producer of this metadata. For example this could be a git url with a given tag or sha",type:"string",format:"uri",example:"https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client"}}),(0,i.jsx)(x(),{collapsible:!1,name:"schemaURL",required:!0,schemaName:"uri",qualifierMessage:void 0,schema:{description:"The JSON Pointer (https://tools.ietf.org/html/rfc6901) URL to the corresponding version of the schema definition for this RunEvent",type:"string",format:"uri",example:"https://openlineage.io/spec/0-0-1/OpenLineage.json"}}),(0,i.jsx)(x(),{collapsible:!1,name:"eventType",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`START`, `RUNNING`, `COMPLETE`, `ABORT`, `FAIL`, `OTHER`]",schema:{description:"the current transition of the run state. It is required to issue 1 START event and 1 of [ COMPLETE, ABORT, FAIL ] event per run. Additional events with OTHER eventType can be added to the same run. For example to send additional metadata after the run is complete",type:"string",enum:["START","RUNNING","COMPLETE","ABORT","FAIL","OTHER"],example:"START|RUNNING|COMPLETE|ABORT|FAIL|OTHER"}}),(0,i.jsx)(x(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"run"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object"})}),(0,i.jsx)("span",{className:"openapi-schema__divider"}),(0,i.jsx)("span",{className:"openapi-schema__required",children:(0,i.jsx)(s.p,{children:"required"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(x(),{collapsible:!1,name:"runId",required:!0,schemaName:"uuid",qualifierMessage:void 0,schema:{description:"The globally unique ID of the run associated with the job.",type:"string",format:"uuid"}}),(0,i.jsx)(x(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"facets"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"The run facets."})}),(0,i.jsxs)("div",{children:[(0,i.jsx)("span",{className:"badge badge--info",style:{marginBottom:"1rem"},children:(0,i.jsx)(s.p,{children:"anyOf"})}),(0,i.jsx)(j(),{children:(0,i.jsx)(f.default,{label:"MOD1",value:"0-item-properties",children:(0,i.jsx)(x(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"property name*"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"RunFacet"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"A Run Facet"})}),(0,i.jsx)(x(),{collapsible:!1,name:"_producer",required:!0,schemaName:"uri",qualifierMessage:void 0,schema:{description:"URI identifying the producer of this metadata. For example this could be a git url with a given tag or sha",type:"string",format:"uri",example:"https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client"}}),(0,i.jsx)(x(),{collapsible:!1,name:"_schemaURL",required:!0,schemaName:"uri",qualifierMessage:void 0,schema:{description:"The JSON Pointer (https://tools.ietf.org/html/rfc6901) URL to the corresponding version of the schema definition for this facet",type:"string",format:"uri",example:"https://openlineage.io/spec/1-0-2/OpenLineage.json#/$defs/BaseFacet"}}),(0,i.jsx)(x(),{name:"property name*",required:!1,schemaName:"any",qualifierMessage:void 0,schema:{description:"A Run Facet",type:"object",title:"RunFacet",required:["_producer","_schemaURL"],additionalProperties:!0,properties:{_producer:{description:"URI identifying the producer of this metadata. For example this could be a git url with a given tag or sha",type:"string",format:"uri",example:"https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client"},_schemaURL:{description:"The JSON Pointer (https://tools.ietf.org/html/rfc6901) URL to the corresponding version of the schema definition for this facet",type:"string",format:"uri",example:"https://openlineage.io/spec/1-0-2/OpenLineage.json#/$defs/BaseFacet"}}},collapsible:!1,discriminator:!1})]})]})})})})]})]})]})})]})]})}),(0,i.jsx)(x(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"job"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object"})}),(0,i.jsx)("span",{className:"openapi-schema__divider"}),(0,i.jsx)("span",{className:"openapi-schema__required",children:(0,i.jsx)(s.p,{children:"required"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(x(),{collapsible:!1,name:"namespace",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"The namespace containing that job",type:"string",example:"my-scheduler-namespace"}}),(0,i.jsx)(x(),{collapsible:!1,name:"name",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"The unique name for that job within that namespace",type:"string",example:"myjob.mytask"}}),(0,i.jsx)(x(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"facets"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"The job facets."})}),(0,i.jsxs)("div",{children:[(0,i.jsx)("span",{className:"badge badge--info",style:{marginBottom:"1rem"},children:(0,i.jsx)(s.p,{children:"anyOf"})}),(0,i.jsx)(j(),{children:(0,i.jsx)(f.default,{label:"MOD1",value:"0-item-properties",children:(0,i.jsx)(x(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"property name*"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"JobFacet"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"A Job Facet"})}),(0,i.jsx)(x(),{collapsible:!1,name:"_producer",required:!0,schemaName:"uri",qualifierMessage:void 0,schema:{description:"URI identifying the producer of this metadata. For example this could be a git url with a given tag or sha",type:"string",format:"uri",example:"https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client"}}),(0,i.jsx)(x(),{collapsible:!1,name:"_schemaURL",required:!0,schemaName:"uri",qualifierMessage:void 0,schema:{description:"The JSON Pointer (https://tools.ietf.org/html/rfc6901) URL to the corresponding version of the schema definition for this facet",type:"string",format:"uri",example:"https://openlineage.io/spec/1-0-2/OpenLineage.json#/$defs/BaseFacet"}}),(0,i.jsx)(x(),{collapsible:!1,name:"_deleted",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"set to true to delete a facet",type:"boolean"}}),(0,i.jsx)(x(),{name:"property name*",required:!1,schemaName:"any",qualifierMessage:void 0,schema:{description:"A Job Facet",type:"object",title:"JobFacet",required:["_producer","_schemaURL"],additionalProperties:!0,properties:{_producer:{description:"URI identifying the producer of this metadata. For example this could be a git url with a given tag or sha",type:"string",format:"uri",example:"https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client"},_schemaURL:{description:"The JSON Pointer (https://tools.ietf.org/html/rfc6901) URL to the corresponding version of the schema definition for this facet",type:"string",format:"uri",example:"https://openlineage.io/spec/1-0-2/OpenLineage.json#/$defs/BaseFacet"},_deleted:{description:"set to true to delete a facet",type:"boolean"}}},collapsible:!1,discriminator:!1})]})]})})})})]})]})]})})]})]})}),(0,i.jsx)(x(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"inputs"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object[]"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsxs)(s.p,{children:["The set of ",(0,i.jsx)(s.strong,{children:"input"})," datasets."]})}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Array ["})})}),(0,i.jsx)(x(),{collapsible:!1,name:"namespace",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"The namespace containing that dataset",type:"string",example:"my-datasource-namespace"}}),(0,i.jsx)(x(),{collapsible:!1,name:"name",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"The unique name for that dataset within that namespace",type:"string",example:"instance.schema.table"}}),(0,i.jsx)(x(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"facets"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"The facets for this dataset"})}),(0,i.jsxs)("div",{children:[(0,i.jsx)("span",{className:"badge badge--info",style:{marginBottom:"1rem"},children:(0,i.jsx)(s.p,{children:"anyOf"})}),(0,i.jsx)(j(),{children:(0,i.jsx)(f.default,{label:"MOD1",value:"0-item-properties",children:(0,i.jsx)(x(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"property name*"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"DatasetFacet"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"A Dataset Facet"})}),(0,i.jsx)(x(),{collapsible:!1,name:"_producer",required:!0,schemaName:"uri",qualifierMessage:void 0,schema:{description:"URI identifying the producer of this metadata. For example this could be a git url with a given tag or sha",type:"string",format:"uri",example:"https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client"}}),(0,i.jsx)(x(),{collapsible:!1,name:"_schemaURL",required:!0,schemaName:"uri",qualifierMessage:void 0,schema:{description:"The JSON Pointer (https://tools.ietf.org/html/rfc6901) URL to the corresponding version of the schema definition for this facet",type:"string",format:"uri",example:"https://openlineage.io/spec/1-0-2/OpenLineage.json#/$defs/BaseFacet"}}),(0,i.jsx)(x(),{collapsible:!1,name:"_deleted",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"set to true to delete a facet",type:"boolean"}}),(0,i.jsx)(x(),{name:"property name*",required:!1,schemaName:"any",qualifierMessage:void 0,schema:{description:"A Dataset Facet",type:"object",title:"DatasetFacet",required:["_producer","_schemaURL"],additionalProperties:!0,properties:{_producer:{description:"URI identifying the producer of this metadata. For example this could be a git url with a given tag or sha",type:"string",format:"uri",example:"https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client"},_schemaURL:{description:"The JSON Pointer (https://tools.ietf.org/html/rfc6901) URL to the corresponding version of the schema definition for this facet",type:"string",format:"uri",example:"https://openlineage.io/spec/1-0-2/OpenLineage.json#/$defs/BaseFacet"},_deleted:{description:"set to true to delete a facet",type:"boolean"}}},collapsible:!1,discriminator:!1})]})]})})})})]})]})]})}),(0,i.jsx)(x(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"inputFacets"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"The input facets for this dataset."})}),(0,i.jsxs)("div",{children:[(0,i.jsx)("span",{className:"badge badge--info",style:{marginBottom:"1rem"},children:(0,i.jsx)(s.p,{children:"anyOf"})}),(0,i.jsx)(j(),{children:(0,i.jsx)(f.default,{label:"MOD1",value:"0-item-properties",children:(0,i.jsx)(x(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"property name*"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"InputDatasetFacet"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"An Input Dataset Facet"})}),(0,i.jsx)(x(),{collapsible:!1,name:"_producer",required:!0,schemaName:"uri",qualifierMessage:void 0,schema:{description:"URI identifying the producer of this metadata. For example this could be a git url with a given tag or sha",type:"string",format:"uri",example:"https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client"}}),(0,i.jsx)(x(),{collapsible:!1,name:"_schemaURL",required:!0,schemaName:"uri",qualifierMessage:void 0,schema:{description:"The JSON Pointer (https://tools.ietf.org/html/rfc6901) URL to the corresponding version of the schema definition for this facet",type:"string",format:"uri",example:"https://openlineage.io/spec/1-0-2/OpenLineage.json#/$defs/BaseFacet"}}),(0,i.jsx)(x(),{name:"property name*",required:!1,schemaName:"any",qualifierMessage:void 0,schema:{description:"An Input Dataset Facet",type:"object",title:"InputDatasetFacet",required:["_producer","_schemaURL"],additionalProperties:!0,properties:{_producer:{description:"URI identifying the producer of this metadata. For example this could be a git url with a given tag or sha",type:"string",format:"uri",example:"https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client"},_schemaURL:{description:"The JSON Pointer (https://tools.ietf.org/html/rfc6901) URL to the corresponding version of the schema definition for this facet",type:"string",format:"uri",example:"https://openlineage.io/spec/1-0-2/OpenLineage.json#/$defs/BaseFacet"}}},collapsible:!1,discriminator:!1})]})]})})})})]})]})]})}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,i.jsx)(s.p,{children:"]"})})})]})]})}),(0,i.jsx)(x(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"outputs"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object[]"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsxs)(s.p,{children:["The set of ",(0,i.jsx)(s.strong,{children:"output"})," datasets."]})}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Array ["})})}),(0,i.jsx)(x(),{collapsible:!1,name:"namespace",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"The namespace containing that dataset",type:"string",example:"my-datasource-namespace"}}),(0,i.jsx)(x(),{collapsible:!1,name:"name",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"The unique name for that dataset within that namespace",type:"string",example:"instance.schema.table"}}),(0,i.jsx)(x(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"facets"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"The facets for this dataset"})}),(0,i.jsxs)("div",{children:[(0,i.jsx)("span",{className:"badge badge--info",style:{marginBottom:"1rem"},children:(0,i.jsx)(s.p,{children:"anyOf"})}),(0,i.jsx)(j(),{children:(0,i.jsx)(f.default,{label:"MOD1",value:"0-item-properties",children:(0,i.jsx)(x(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"property name*"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"DatasetFacet"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"A Dataset Facet"})}),(0,i.jsx)(x(),{collapsible:!1,name:"_producer",required:!0,schemaName:"uri",qualifierMessage:void 0,schema:{description:"URI identifying the producer of this metadata. For example this could be a git url with a given tag or sha",type:"string",format:"uri",example:"https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client"}}),(0,i.jsx)(x(),{collapsible:!1,name:"_schemaURL",required:!0,schemaName:"uri",qualifierMessage:void 0,schema:{description:"The JSON Pointer (https://tools.ietf.org/html/rfc6901) URL to the corresponding version of the schema definition for this facet",type:"string",format:"uri",example:"https://openlineage.io/spec/1-0-2/OpenLineage.json#/$defs/BaseFacet"}}),(0,i.jsx)(x(),{collapsible:!1,name:"_deleted",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"set to true to delete a facet",type:"boolean"}}),(0,i.jsx)(x(),{name:"property name*",required:!1,schemaName:"any",qualifierMessage:void 0,schema:{description:"A Dataset Facet",type:"object",title:"DatasetFacet",required:["_producer","_schemaURL"],additionalProperties:!0,properties:{_producer:{description:"URI identifying the producer of this metadata. For example this could be a git url with a given tag or sha",type:"string",format:"uri",example:"https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client"},_schemaURL:{description:"The JSON Pointer (https://tools.ietf.org/html/rfc6901) URL to the corresponding version of the schema definition for this facet",type:"string",format:"uri",example:"https://openlineage.io/spec/1-0-2/OpenLineage.json#/$defs/BaseFacet"},_deleted:{description:"set to true to delete a facet",type:"boolean"}}},collapsible:!1,discriminator:!1})]})]})})})})]})]})]})}),(0,i.jsx)(x(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"outputFacets"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"The output facets for this dataset"})}),(0,i.jsxs)("div",{children:[(0,i.jsx)("span",{className:"badge badge--info",style:{marginBottom:"1rem"},children:(0,i.jsx)(s.p,{children:"anyOf"})}),(0,i.jsx)(j(),{children:(0,i.jsx)(f.default,{label:"MOD1",value:"0-item-properties",children:(0,i.jsx)(x(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"property name*"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"OutputDatasetFacet"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"An Output Dataset Facet"})}),(0,i.jsx)(x(),{collapsible:!1,name:"_producer",required:!0,schemaName:"uri",qualifierMessage:void 0,schema:{description:"URI identifying the producer of this metadata. For example this could be a git url with a given tag or sha",type:"string",format:"uri",example:"https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client"}}),(0,i.jsx)(x(),{collapsible:!1,name:"_schemaURL",required:!0,schemaName:"uri",qualifierMessage:void 0,schema:{description:"The JSON Pointer (https://tools.ietf.org/html/rfc6901) URL to the corresponding version of the schema definition for this facet",type:"string",format:"uri",example:"https://openlineage.io/spec/1-0-2/OpenLineage.json#/$defs/BaseFacet"}}),(0,i.jsx)(x(),{name:"property name*",required:!1,schemaName:"any",qualifierMessage:void 0,schema:{description:"An Output Dataset Facet",type:"object",title:"OutputDatasetFacet",required:["_producer","_schemaURL"],additionalProperties:!0,properties:{_producer:{description:"URI identifying the producer of this metadata. For example this could be a git url with a given tag or sha",type:"string",format:"uri",example:"https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client"},_schemaURL:{description:"The JSON Pointer (https://tools.ietf.org/html/rfc6901) URL to the corresponding version of the schema definition for this facet",type:"string",format:"uri",example:"https://openlineage.io/spec/1-0-2/OpenLineage.json#/$defs/BaseFacet"}}},collapsible:!1,discriminator:!1})]})]})})})})]})]})]})}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,i.jsx)(s.p,{children:"]"})})})]})]})})]}),(0,i.jsxs)(f.default,{label:"DatasetEvent",value:"1-item-properties",children:[(0,i.jsx)(x(),{collapsible:!1,name:"eventTime",required:!0,schemaName:"date-time",qualifierMessage:void 0,schema:{description:"the time the event occurred at",type:"string",format:"date-time"}}),(0,i.jsx)(x(),{collapsible:!1,name:"producer",required:!0,schemaName:"uri",qualifierMessage:void 0,schema:{description:"URI identifying the producer of this metadata. For example this could be a git url with a given tag or sha",type:"string",format:"uri",example:"https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client"}}),(0,i.jsx)(x(),{collapsible:!1,name:"schemaURL",required:!0,schemaName:"uri",qualifierMessage:void 0,schema:{description:"The JSON Pointer (https://tools.ietf.org/html/rfc6901) URL to the corresponding version of the schema definition for this RunEvent",type:"string",format:"uri",example:"https://openlineage.io/spec/0-0-1/OpenLineage.json"}}),(0,i.jsx)(x(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"dataset"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object"})}),(0,i.jsx)("span",{className:"openapi-schema__divider"}),(0,i.jsx)("span",{className:"openapi-schema__required",children:(0,i.jsx)(s.p,{children:"required"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"A Dataset sent within static metadata events"})}),(0,i.jsx)(x(),{collapsible:!1,name:"namespace",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"The namespace containing that dataset",type:"string",example:"my-datasource-namespace"}}),(0,i.jsx)(x(),{collapsible:!1,name:"name",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"The unique name for that dataset within that namespace",type:"string",example:"instance.schema.table"}}),(0,i.jsx)(x(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"facets"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"The facets for this dataset"})}),(0,i.jsxs)("div",{children:[(0,i.jsx)("span",{className:"badge badge--info",style:{marginBottom:"1rem"},children:(0,i.jsx)(s.p,{children:"anyOf"})}),(0,i.jsx)(j(),{children:(0,i.jsx)(f.default,{label:"MOD1",value:"0-item-properties",children:(0,i.jsx)(x(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"property name*"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"DatasetFacet"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"A Dataset Facet"})}),(0,i.jsx)(x(),{collapsible:!1,name:"_producer",required:!0,schemaName:"uri",qualifierMessage:void 0,schema:{description:"URI identifying the producer of this metadata. For example this could be a git url with a given tag or sha",type:"string",format:"uri",example:"https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client"}}),(0,i.jsx)(x(),{collapsible:!1,name:"_schemaURL",required:!0,schemaName:"uri",qualifierMessage:void 0,schema:{description:"The JSON Pointer (https://tools.ietf.org/html/rfc6901) URL to the corresponding version of the schema definition for this facet",type:"string",format:"uri",example:"https://openlineage.io/spec/1-0-2/OpenLineage.json#/$defs/BaseFacet"}}),(0,i.jsx)(x(),{collapsible:!1,name:"_deleted",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"set to true to delete a facet",type:"boolean"}}),(0,i.jsx)(x(),{name:"property name*",required:!1,schemaName:"any",qualifierMessage:void 0,schema:{description:"A Dataset Facet",type:"object",title:"DatasetFacet",required:["_producer","_schemaURL"],additionalProperties:!0,properties:{_producer:{description:"URI identifying the producer of this metadata. For example this could be a git url with a given tag or sha",type:"string",format:"uri",example:"https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client"},_schemaURL:{description:"The JSON Pointer (https://tools.ietf.org/html/rfc6901) URL to the corresponding version of the schema definition for this facet",type:"string",format:"uri",example:"https://openlineage.io/spec/1-0-2/OpenLineage.json#/$defs/BaseFacet"},_deleted:{description:"set to true to delete a facet",type:"boolean"}}},collapsible:!1,discriminator:!1})]})]})})})})]})]})]})})]})]})})]}),(0,i.jsxs)(f.default,{label:"JobEvent",value:"2-item-properties",children:[(0,i.jsx)(x(),{collapsible:!1,name:"eventTime",required:!0,schemaName:"date-time",qualifierMessage:void 0,schema:{description:"the time the event occurred at",type:"string",format:"date-time"}}),(0,i.jsx)(x(),{collapsible:!1,name:"producer",required:!0,schemaName:"uri",qualifierMessage:void 0,schema:{description:"URI identifying the producer of this metadata. For example this could be a git url with a given tag or sha",type:"string",format:"uri",example:"https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client"}}),(0,i.jsx)(x(),{collapsible:!1,name:"schemaURL",required:!0,schemaName:"uri",qualifierMessage:void 0,schema:{description:"The JSON Pointer (https://tools.ietf.org/html/rfc6901) URL to the corresponding version of the schema definition for this RunEvent",type:"string",format:"uri",example:"https://openlineage.io/spec/0-0-1/OpenLineage.json"}}),(0,i.jsx)(x(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"job"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object"})}),(0,i.jsx)("span",{className:"openapi-schema__divider"}),(0,i.jsx)("span",{className:"openapi-schema__required",children:(0,i.jsx)(s.p,{children:"required"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(x(),{collapsible:!1,name:"namespace",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"The namespace containing that job",type:"string",example:"my-scheduler-namespace"}}),(0,i.jsx)(x(),{collapsible:!1,name:"name",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"The unique name for that job within that namespace",type:"string",example:"myjob.mytask"}}),(0,i.jsx)(x(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"facets"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"The job facets."})}),(0,i.jsxs)("div",{children:[(0,i.jsx)("span",{className:"badge badge--info",style:{marginBottom:"1rem"},children:(0,i.jsx)(s.p,{children:"anyOf"})}),(0,i.jsx)(j(),{children:(0,i.jsx)(f.default,{label:"MOD1",value:"0-item-properties",children:(0,i.jsx)(x(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"property name*"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"JobFacet"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"A Job Facet"})}),(0,i.jsx)(x(),{collapsible:!1,name:"_producer",required:!0,schemaName:"uri",qualifierMessage:void 0,schema:{description:"URI identifying the producer of this metadata. For example this could be a git url with a given tag or sha",type:"string",format:"uri",example:"https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client"}}),(0,i.jsx)(x(),{collapsible:!1,name:"_schemaURL",required:!0,schemaName:"uri",qualifierMessage:void 0,schema:{description:"The JSON Pointer (https://tools.ietf.org/html/rfc6901) URL to the corresponding version of the schema definition for this facet",type:"string",format:"uri",example:"https://openlineage.io/spec/1-0-2/OpenLineage.json#/$defs/BaseFacet"}}),(0,i.jsx)(x(),{collapsible:!1,name:"_deleted",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"set to true to delete a facet",type:"boolean"}}),(0,i.jsx)(x(),{name:"property name*",required:!1,schemaName:"any",qualifierMessage:void 0,schema:{description:"A Job Facet",type:"object",title:"JobFacet",required:["_producer","_schemaURL"],additionalProperties:!0,properties:{_producer:{description:"URI identifying the producer of this metadata. For example this could be a git url with a given tag or sha",type:"string",format:"uri",example:"https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client"},_schemaURL:{description:"The JSON Pointer (https://tools.ietf.org/html/rfc6901) URL to the corresponding version of the schema definition for this facet",type:"string",format:"uri",example:"https://openlineage.io/spec/1-0-2/OpenLineage.json#/$defs/BaseFacet"},_deleted:{description:"set to true to delete a facet",type:"boolean"}}},collapsible:!1,discriminator:!1})]})]})})})})]})]})]})})]})]})}),(0,i.jsx)(x(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"inputs"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object[]"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsxs)(s.p,{children:["The set of ",(0,i.jsx)(s.strong,{children:"input"})," datasets."]})}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Array ["})})}),(0,i.jsx)(x(),{collapsible:!1,name:"namespace",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"The namespace containing that dataset",type:"string",example:"my-datasource-namespace"}}),(0,i.jsx)(x(),{collapsible:!1,name:"name",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"The unique name for that dataset within that namespace",type:"string",example:"instance.schema.table"}}),(0,i.jsx)(x(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"facets"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"The facets for this dataset"})}),(0,i.jsxs)("div",{children:[(0,i.jsx)("span",{className:"badge badge--info",style:{marginBottom:"1rem"},children:(0,i.jsx)(s.p,{children:"anyOf"})}),(0,i.jsx)(j(),{children:(0,i.jsx)(f.default,{label:"MOD1",value:"0-item-properties",children:(0,i.jsx)(x(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"property name*"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"DatasetFacet"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"A Dataset Facet"})}),(0,i.jsx)(x(),{collapsible:!1,name:"_producer",required:!0,schemaName:"uri",qualifierMessage:void 0,schema:{description:"URI identifying the producer of this metadata. For example this could be a git url with a given tag or sha",type:"string",format:"uri",example:"https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client"}}),(0,i.jsx)(x(),{collapsible:!1,name:"_schemaURL",required:!0,schemaName:"uri",qualifierMessage:void 0,schema:{description:"The JSON Pointer (https://tools.ietf.org/html/rfc6901) URL to the corresponding version of the schema definition for this facet",type:"string",format:"uri",example:"https://openlineage.io/spec/1-0-2/OpenLineage.json#/$defs/BaseFacet"}}),(0,i.jsx)(x(),{collapsible:!1,name:"_deleted",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"set to true to delete a facet",type:"boolean"}}),(0,i.jsx)(x(),{name:"property name*",required:!1,schemaName:"any",qualifierMessage:void 0,schema:{description:"A Dataset Facet",type:"object",title:"DatasetFacet",required:["_producer","_schemaURL"],additionalProperties:!0,properties:{_producer:{description:"URI identifying the producer of this metadata. For example this could be a git url with a given tag or sha",type:"string",format:"uri",example:"https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client"},_schemaURL:{description:"The JSON Pointer (https://tools.ietf.org/html/rfc6901) URL to the corresponding version of the schema definition for this facet",type:"string",format:"uri",example:"https://openlineage.io/spec/1-0-2/OpenLineage.json#/$defs/BaseFacet"},_deleted:{description:"set to true to delete a facet",type:"boolean"}}},collapsible:!1,discriminator:!1})]})]})})})})]})]})]})}),(0,i.jsx)(x(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"inputFacets"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"The input facets for this dataset."})}),(0,i.jsxs)("div",{children:[(0,i.jsx)("span",{className:"badge badge--info",style:{marginBottom:"1rem"},children:(0,i.jsx)(s.p,{children:"anyOf"})}),(0,i.jsx)(j(),{children:(0,i.jsx)(f.default,{label:"MOD1",value:"0-item-properties",children:(0,i.jsx)(x(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"property name*"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"InputDatasetFacet"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"An Input Dataset Facet"})}),(0,i.jsx)(x(),{collapsible:!1,name:"_producer",required:!0,schemaName:"uri",qualifierMessage:void 0,schema:{description:"URI identifying the producer of this metadata. For example this could be a git url with a given tag or sha",type:"string",format:"uri",example:"https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client"}}),(0,i.jsx)(x(),{collapsible:!1,name:"_schemaURL",required:!0,schemaName:"uri",qualifierMessage:void 0,schema:{description:"The JSON Pointer (https://tools.ietf.org/html/rfc6901) URL to the corresponding version of the schema definition for this facet",type:"string",format:"uri",example:"https://openlineage.io/spec/1-0-2/OpenLineage.json#/$defs/BaseFacet"}}),(0,i.jsx)(x(),{name:"property name*",required:!1,schemaName:"any",qualifierMessage:void 0,schema:{description:"An Input Dataset Facet",type:"object",title:"InputDatasetFacet",required:["_producer","_schemaURL"],additionalProperties:!0,properties:{_producer:{description:"URI identifying the producer of this metadata. For example this could be a git url with a given tag or sha",type:"string",format:"uri",example:"https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client"},_schemaURL:{description:"The JSON Pointer (https://tools.ietf.org/html/rfc6901) URL to the corresponding version of the schema definition for this facet",type:"string",format:"uri",example:"https://openlineage.io/spec/1-0-2/OpenLineage.json#/$defs/BaseFacet"}}},collapsible:!1,discriminator:!1})]})]})})})})]})]})]})}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,i.jsx)(s.p,{children:"]"})})})]})]})}),(0,i.jsx)(x(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"outputs"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object[]"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsxs)(s.p,{children:["The set of ",(0,i.jsx)(s.strong,{children:"output"})," datasets."]})}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Array ["})})}),(0,i.jsx)(x(),{collapsible:!1,name:"namespace",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"The namespace containing that dataset",type:"string",example:"my-datasource-namespace"}}),(0,i.jsx)(x(),{collapsible:!1,name:"name",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"The unique name for that dataset within that namespace",type:"string",example:"instance.schema.table"}}),(0,i.jsx)(x(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"facets"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"The facets for this dataset"})}),(0,i.jsxs)("div",{children:[(0,i.jsx)("span",{className:"badge badge--info",style:{marginBottom:"1rem"},children:(0,i.jsx)(s.p,{children:"anyOf"})}),(0,i.jsx)(j(),{children:(0,i.jsx)(f.default,{label:"MOD1",value:"0-item-properties",children:(0,i.jsx)(x(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"property name*"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"DatasetFacet"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"A Dataset Facet"})}),(0,i.jsx)(x(),{collapsible:!1,name:"_producer",required:!0,schemaName:"uri",qualifierMessage:void 0,schema:{description:"URI identifying the producer of this metadata. For example this could be a git url with a given tag or sha",type:"string",format:"uri",example:"https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client"}}),(0,i.jsx)(x(),{collapsible:!1,name:"_schemaURL",required:!0,schemaName:"uri",qualifierMessage:void 0,schema:{description:"The JSON Pointer (https://tools.ietf.org/html/rfc6901) URL to the corresponding version of the schema definition for this facet",type:"string",format:"uri",example:"https://openlineage.io/spec/1-0-2/OpenLineage.json#/$defs/BaseFacet"}}),(0,i.jsx)(x(),{collapsible:!1,name:"_deleted",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"set to true to delete a facet",type:"boolean"}}),(0,i.jsx)(x(),{name:"property name*",required:!1,schemaName:"any",qualifierMessage:void 0,schema:{description:"A Dataset Facet",type:"object",title:"DatasetFacet",required:["_producer","_schemaURL"],additionalProperties:!0,properties:{_producer:{description:"URI identifying the producer of this metadata. For example this could be a git url with a given tag or sha",type:"string",format:"uri",example:"https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client"},_schemaURL:{description:"The JSON Pointer (https://tools.ietf.org/html/rfc6901) URL to the corresponding version of the schema definition for this facet",type:"string",format:"uri",example:"https://openlineage.io/spec/1-0-2/OpenLineage.json#/$defs/BaseFacet"},_deleted:{description:"set to true to delete a facet",type:"boolean"}}},collapsible:!1,discriminator:!1})]})]})})})})]})]})]})}),(0,i.jsx)(x(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"outputFacets"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"The output facets for this dataset"})}),(0,i.jsxs)("div",{children:[(0,i.jsx)("span",{className:"badge badge--info",style:{marginBottom:"1rem"},children:(0,i.jsx)(s.p,{children:"anyOf"})}),(0,i.jsx)(j(),{children:(0,i.jsx)(f.default,{label:"MOD1",value:"0-item-properties",children:(0,i.jsx)(x(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"property name*"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"OutputDatasetFacet"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"An Output Dataset Facet"})}),(0,i.jsx)(x(),{collapsible:!1,name:"_producer",required:!0,schemaName:"uri",qualifierMessage:void 0,schema:{description:"URI identifying the producer of this metadata. For example this could be a git url with a given tag or sha",type:"string",format:"uri",example:"https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client"}}),(0,i.jsx)(x(),{collapsible:!1,name:"_schemaURL",required:!0,schemaName:"uri",qualifierMessage:void 0,schema:{description:"The JSON Pointer (https://tools.ietf.org/html/rfc6901) URL to the corresponding version of the schema definition for this facet",type:"string",format:"uri",example:"https://openlineage.io/spec/1-0-2/OpenLineage.json#/$defs/BaseFacet"}}),(0,i.jsx)(x(),{name:"property name*",required:!1,schemaName:"any",qualifierMessage:void 0,schema:{description:"An Output Dataset Facet",type:"object",title:"OutputDatasetFacet",required:["_producer","_schemaURL"],additionalProperties:!0,properties:{_producer:{description:"URI identifying the producer of this metadata. For example this could be a git url with a given tag or sha",type:"string",format:"uri",example:"https://github.com/OpenLineage/OpenLineage/blob/v1-0-0/client"},_schemaURL:{description:"The JSON Pointer (https://tools.ietf.org/html/rfc6901) URL to the corresponding version of the schema definition for this facet",type:"string",format:"uri",example:"https://openlineage.io/spec/1-0-2/OpenLineage.json#/$defs/BaseFacet"}}},collapsible:!1,discriminator:!1})]})]})})})})]})]})]})}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,i.jsx)(s.p,{children:"]"})})})]})]})})]})]})]})})]})})}),"\n",(0,i.jsx)("div",{children:(0,i.jsx)("div",{children:(0,i.jsxs)(n(),{label:void 0,id:void 0,children:[(0,i.jsxs)(f.default,{label:"200",value:"200",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"OK"})}),(0,i.jsx)("div",{})]}),(0,i.jsxs)(f.default,{label:"429",value:"429",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"Too Many Requests"})}),(0,i.jsx)("div",{})]}),(0,i.jsxs)(f.default,{label:"5xx",value:"5xx",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"A server-side problem that might not be addressable from the client side. Used for server 5xx errors without more specific documentation in individual routes."})}),(0,i.jsx)("div",{children:(0,i.jsx)(p(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(f.default,{label:"application/vnd.gravitino.v1+json",value:"application/vnd.gravitino.v1+json",children:(0,i.jsxs)(j(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(x(),{collapsible:!1,name:"code",required:!0,schemaName:"integer",qualifierMessage:"**Possible values:** `>= 1000` and `<= 1100`",schema:{type:"integer",minimum:1e3,maximum:1100,description:"HTTP response code",example:1002}}),(0,i.jsx)(x(),{collapsible:!1,name:"type",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"Internal type definition of the error"}}),(0,i.jsx)(x(),{collapsible:!1,name:"message",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{type:"string",description:"A human-readable message"}}),(0,i.jsx)(x(),{collapsible:!1,name:"stack",required:!1,schemaName:"string[]",qualifierMessage:void 0,schema:{type:"array",items:{type:"string"}}})]})]})}),(0,i.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(d(),{responseExample:'{\n  "code": 1002,\n  "type": "string",\n  "message": "string",\n  "stack": [\n    "string"\n  ]\n}',language:"json"})}),(0,i.jsx)(f.default,{label:"Example",value:"Example",children:(0,i.jsx)(d(),{responseExample:'{\n  "code": 1002,\n  "type": "RuntimeException",\n  "message": "Internal Server Error",\n  "stack": [\n    "java.lang.RuntimeException: Internal Server Error"\n  ]\n}',language:"json"})})]})})})})]})]})})})]})}function q(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(L,{...e})}):L(e)}}}]);