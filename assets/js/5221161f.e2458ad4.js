"use strict";(self.webpackChunkapache_website_template=self.webpackChunkapache_website_template||[]).push([[78457],{14607:(e,a,o)=>{o.d(a,{R:()=>s,x:()=>l});var n=o(79474);const i={},t=n.createContext(i);function s(e){const a=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function l(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),n.createElement(t.Provider,{value:a},e.children)}},60097:(e,a,o)=>{o.r(a),o.d(a,{assets:()=>r,contentTitle:()=>s,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>d});var n=o(13274),i=o(14607);const t={title:"Model catalog",slug:"/model-catalog",date:new Date("2024-12-26T00:00:00.000Z"),keyword:"model catalog",license:"This software is licensed under the Apache License version 2."},s=void 0,l={id:"model-catalog",title:"Model catalog",description:"Introduction",source:"@site/versioned_docs/version-0.8.0-incubating/model-catalog.md",sourceDirName:".",slug:"/model-catalog",permalink:"/docs/0.8.0-incubating/model-catalog",draft:!1,unlisted:!1,editUrl:"https://github.com/apache/gravitino-site/tree/main/docs/model-catalog.md",tags:[],version:"0.8.0-incubating",frontMatter:{title:"Model catalog",slug:"/model-catalog",date:"2024-12-26T00:00:00.000Z",keyword:"model catalog",license:"This software is licensed under the Apache License version 2."},sidebar:"docs",previous:{title:"Kafka catalog",permalink:"/docs/0.8.0-incubating/kafka-catalog"},next:{title:"Index",permalink:"/docs/0.8.0-incubating/trino-connector/index"}},r={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Catalog",id:"catalog",level:2},{value:"Catalog properties",id:"catalog-properties",level:3},{value:"Catalog operations",id:"catalog-operations",level:3},{value:"Schema",id:"schema",level:2},{value:"Schema capabilities",id:"schema-capabilities",level:3},{value:"Schema properties",id:"schema-properties",level:3},{value:"Schema operations",id:"schema-operations",level:3},{value:"Model",id:"model",level:2},{value:"Model capabilities",id:"model-capabilities",level:3},{value:"Model properties",id:"model-properties",level:3},{value:"Model operations",id:"model-operations",level:3},{value:"ModelVersion",id:"modelversion",level:2},{value:"ModelVersion capabilities",id:"modelversion-capabilities",level:3},{value:"ModelVersion properties",id:"modelversion-properties",level:3},{value:"ModelVersion operations",id:"modelversion-operations",level:3}];function c(e){const a={a:"a",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h2,{id:"introduction",children:"Introduction"}),"\n",(0,n.jsx)(a.p,{children:"A Model catalog is a metadata catalog that provides the unified interface to manage the metadata of\nmachine learning models in a centralized way. It follows the typical Gravitino 3-level namespace\n(catalog, schema, and model) to manage the ML models metadata. In addition, it supports\nmanaging the versions for each model."}),"\n",(0,n.jsx)(a.p,{children:"The advantages of using model catalog are:"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsx)(a.li,{children:"Centralized management of ML models with user defined namespaces. Users can better discover\nand govern the models from sematic level, rather than managing the model files directly."}),"\n",(0,n.jsx)(a.li,{children:"Version management for each model. Users can easily track the model versions and manage the\nmodel lifecycle."}),"\n"]}),"\n",(0,n.jsx)(a.p,{children:"The key concept of model management is to manage the path (URI) of the model. Instead of\nmanaging the model storage path physically and separately, model metadata defines the mapping\nrelation between the model name and the storage path. In the meantime, with the support of\nextensible properties of model metadata, users can define the model metadata with more detailed information\nrather than just the storage path."}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"Model"}),": A model is a metadata object defined in the model catalog, to manage a ML model. Each\nmodel can have many ",(0,n.jsx)(a.strong,{children:"Model Versions"}),", and each version can have its own properties. Models\ncan be retrieved by the name."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"ModelVersion"}),": The model version is a metadata defined in the model catalog, to manage each\nversion of the ML model. Each version has a unique version number, and can have its own\nproperties and storage path. ModelVersion can be retrieved by the model name and version\nnumber. Also, each version can have a list of aliases, which can also be used to retrieve."]}),"\n"]}),"\n",(0,n.jsx)(a.h2,{id:"catalog",children:"Catalog"}),"\n",(0,n.jsx)(a.h3,{id:"catalog-properties",children:"Catalog properties"}),"\n",(0,n.jsxs)(a.p,{children:["A Model catalog doesn't have specific properties. It uses the ",(0,n.jsx)(a.a,{href:"/docs/0.8.0-incubating/gravitino-server-config#apache-gravitino-catalog-properties-configuration",children:"common catalog properties"}),"."]}),"\n",(0,n.jsx)(a.h3,{id:"catalog-operations",children:"Catalog operations"}),"\n",(0,n.jsxs)(a.p,{children:["Refer to ",(0,n.jsx)(a.a,{href:"/docs/0.8.0-incubating/manage-model-metadata-using-gravitino#catalog-operations",children:"Catalog operations"})," for more details."]}),"\n",(0,n.jsx)(a.h2,{id:"schema",children:"Schema"}),"\n",(0,n.jsx)(a.h3,{id:"schema-capabilities",children:"Schema capabilities"}),"\n",(0,n.jsx)(a.p,{children:"Schema is the second level of the model catalog namespace, the model catalog supports creating, updating, deleting, and listing schemas."}),"\n",(0,n.jsx)(a.h3,{id:"schema-properties",children:"Schema properties"}),"\n",(0,n.jsx)(a.p,{children:"Schema in the model catalog doesn't have predefined properties. Users can define the properties for each schema."}),"\n",(0,n.jsx)(a.h3,{id:"schema-operations",children:"Schema operations"}),"\n",(0,n.jsxs)(a.p,{children:["Refer to ",(0,n.jsx)(a.a,{href:"/docs/0.8.0-incubating/manage-model-metadata-using-gravitino#schema-operations",children:"Schema operation"})," for more details."]}),"\n",(0,n.jsx)(a.h2,{id:"model",children:"Model"}),"\n",(0,n.jsx)(a.h3,{id:"model-capabilities",children:"Model capabilities"}),"\n",(0,n.jsx)(a.p,{children:"The Model catalog supports registering, listing and deleting models and model versions."}),"\n",(0,n.jsx)(a.h3,{id:"model-properties",children:"Model properties"}),"\n",(0,n.jsx)(a.p,{children:"Model doesn't have predefined properties. Users can define the properties for each model and model version."}),"\n",(0,n.jsx)(a.h3,{id:"model-operations",children:"Model operations"}),"\n",(0,n.jsxs)(a.p,{children:["Refer to ",(0,n.jsx)(a.a,{href:"/docs/0.8.0-incubating/manage-model-metadata-using-gravitino#model-operations",children:"Model operation"})," for more details."]}),"\n",(0,n.jsx)(a.h2,{id:"modelversion",children:"ModelVersion"}),"\n",(0,n.jsx)(a.h3,{id:"modelversion-capabilities",children:"ModelVersion capabilities"}),"\n",(0,n.jsx)(a.p,{children:"The Model catalog supports linking, listing and deleting model versions."}),"\n",(0,n.jsx)(a.h3,{id:"modelversion-properties",children:"ModelVersion properties"}),"\n",(0,n.jsx)(a.p,{children:"ModelVersion doesn't have predefined properties. Users can define the properties for each version."}),"\n",(0,n.jsx)(a.h3,{id:"modelversion-operations",children:"ModelVersion operations"}),"\n",(0,n.jsxs)(a.p,{children:["Refer to ",(0,n.jsx)(a.a,{href:"/docs/0.8.0-incubating/manage-model-metadata-using-gravitino#model-version-operations",children:"ModelVersion operation"})," for more details."]})]})}function h(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}}}]);