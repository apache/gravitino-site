"use strict";(self.webpackChunkapache_website_template=self.webpackChunkapache_website_template||[]).push([[1267],{55390:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var a=t(79474);const s={},r=a.createContext(s);function l(e){const n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),a.createElement(r.Provider,{value:n},e.children)}},74895:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var a=t(13274),s=t(55390);const r={title:"Apache Gravitino Trino connector - PostgreSQL catalog",slug:"/trino-connector/catalog-postgresql",keyword:"gravitino connector trino",license:"This software is licensed under the Apache License version 2."},l=void 0,o={id:"trino-connector/catalog-postgresql",title:"Apache Gravitino Trino connector - PostgreSQL catalog",description:"The PostgreSQL catalog allows querying and creating tables in an external PostgreSQL database.",source:"@site/versioned_docs/version-0.6.0-incubating/trino-connector/catalog-postgresql.md",sourceDirName:"trino-connector",slug:"/trino-connector/catalog-postgresql",permalink:"/docs/0.6.0-incubating/trino-connector/catalog-postgresql",draft:!1,unlisted:!1,editUrl:"https://github.com/apache/gravitino-site/tree/main/docs/trino-connector/catalog-postgresql.md",tags:[],version:"0.6.0-incubating",frontMatter:{title:"Apache Gravitino Trino connector - PostgreSQL catalog",slug:"/trino-connector/catalog-postgresql",keyword:"gravitino connector trino",license:"This software is licensed under the Apache License version 2."},sidebar:"docs",previous:{title:"MySQL",permalink:"/docs/0.6.0-incubating/trino-connector/catalog-mysql"},next:{title:"Supported SQL",permalink:"/docs/0.6.0-incubating/trino-connector/sql-support"}},i={},c=[{value:"Requirements",id:"requirements",level:2},{value:"Create table",id:"create-table",level:2},{value:"Alter table",id:"alter-table",level:2},{value:"Select",id:"select",level:2},{value:"Table and Schema properties",id:"table-and-schema-properties",level:2},{value:"Basic usage examples",id:"basic-usage-examples",level:2},{value:"Creating tables and schemas",id:"creating-tables-and-schemas",level:3},{value:"Writing data",id:"writing-data",level:3},{value:"Querying data",id:"querying-data",level:3},{value:"Modify a table",id:"modify-a-table",level:3},{value:"Drop",id:"drop",level:3}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"The PostgreSQL catalog allows querying and creating tables in an external PostgreSQL database.\nThis can be used to join data between different systems like PostgreSQL and Hive, or between different PostgreSQL instances."}),"\n",(0,a.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,a.jsx)(n.p,{children:"To connect to PostgreSQL, you need:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"PostgreSQL 10.x or higher."}),"\n",(0,a.jsx)(n.li,{children:"Network access from the Trino coordinator and workers to PostgreSQL. Port 5432 is the default port."}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"create-table",children:"Create table"}),"\n",(0,a.jsx)(n.p,{children:"At present, the Apache Gravitino Trino connector only supports basic PostgreSQL table creation statements, which involve fields, null allowances, and comments. However, it does not support advanced features like primary keys, indexes, default values, and auto-increment."}),"\n",(0,a.jsxs)(n.p,{children:["The Gravitino Trino connector does not support ",(0,a.jsx)(n.code,{children:"CREATE TABLE AS SELECT"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"alter-table",children:"Alter table"}),"\n",(0,a.jsx)(n.p,{children:"Gravitino Trino connector supports the following alter table operations:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Rename table"}),"\n",(0,a.jsx)(n.li,{children:"Add a column"}),"\n",(0,a.jsx)(n.li,{children:"Drop a column"}),"\n",(0,a.jsx)(n.li,{children:"Rename a column"}),"\n",(0,a.jsx)(n.li,{children:"Change a column type"}),"\n",(0,a.jsx)(n.li,{children:"Set a table property"}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"select",children:"Select"}),"\n",(0,a.jsx)(n.p,{children:"The Gravitino Trino connector supports most SELECT statements, allowing the execution of queries successfully.\nCurrently, it doesn't support certain query optimizations, such as indexes and pushdowns."}),"\n",(0,a.jsx)(n.h2,{id:"table-and-schema-properties",children:"Table and Schema properties"}),"\n",(0,a.jsx)(n.p,{children:"PostgreSQL's tables and schemas cannot support properties."}),"\n",(0,a.jsx)(n.h2,{id:"basic-usage-examples",children:"Basic usage examples"}),"\n",(0,a.jsx)(n.p,{children:"You need to do the following steps before you can use the PostgreSQL catalog in Trino through Gravitino."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Create a metalake and catalog in Gravitino. Assuming that the metalake name is ",(0,a.jsx)(n.code,{children:"test"})," and the catalog name is ",(0,a.jsx)(n.code,{children:"postgresql_test"}),", then you can use the following code to create them in Gravitino:"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'curl -X POST -H "Content-Type: application/json" \\\n-d \'{\n  "name": "test",\n  "comment": "comment",\n  "properties": {}\n}\' http://gravitino-host:8090/api/metalakes\n\ncurl -X POST -H "Content-Type: application/json" \\\n-d \'{\n  "name": "postgresql_test",\n  "type": "RELATIONAL",\n  "comment": "comment",\n  "provider": "jdbc-postgresql",\n  "properties": {\n    "jdbc-url": "jdbc:postgresql://postgresql-host/mydb",\n    "jdbc-user": "<user>",\n    "jdbc-password": "<password>",\n    "jdbc-database": "mydb",\n    "jdbc-driver": "org.postgresql.Driver"\n  }\n}\' http://gravitino-host:8090/api/metalakes/test/catalogs\n'})}),"\n",(0,a.jsxs)(n.p,{children:["For more information about the PostgreSQL catalog, please refer to ",(0,a.jsx)(n.a,{href:"/docs/0.6.0-incubating/jdbc-postgresql-catalog",children:"PostgreSQL catalog"}),"."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Set the value of configuration ",(0,a.jsx)(n.code,{children:"gravitino.metalake"})," to the metalake you have created, named 'test', and start the Trino container."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Use the Trino CLI to connect to the Trino container and run a query."}),"\n",(0,a.jsx)(n.p,{children:"Listing all Gravitino managed catalogs:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"SHOW CATALOGS;\n"})}),"\n",(0,a.jsx)(n.p,{children:"The results are similar to:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-text",children:"    Catalog\n----------------\n gravitino\n jmx\n system\n postgresql_test\n(4 rows)\n\nQuery 20231017_082503_00018_6nt3n, FINISHED, 1 node\n"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"gravitino"})," catalog is a catalog defined By Trino catalog configuration.\nThe ",(0,a.jsx)(n.code,{children:"postgresql_test"})," catalog is the catalog created by you in Gravitino.\nOther catalogs are regular user-configured Trino catalogs."]}),"\n",(0,a.jsx)(n.h3,{id:"creating-tables-and-schemas",children:"Creating tables and schemas"}),"\n",(0,a.jsxs)(n.p,{children:["Create a new schema named ",(0,a.jsx)(n.code,{children:"database_01"})," in ",(0,a.jsx)(n.code,{children:"postgresql_test"})," catalog."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"CREATE SCHEMA postgresql_test.database_01;\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Create a new table named ",(0,a.jsx)(n.code,{children:"table_01"})," in schema ",(0,a.jsx)(n.code,{children:"postgresql_test.database_01"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE postgresql_test.database_01.table_01\n(\nname varchar,\nsalary int\n);\n"})}),"\n",(0,a.jsx)(n.h3,{id:"writing-data",children:"Writing data"}),"\n",(0,a.jsxs)(n.p,{children:["Insert data into the table ",(0,a.jsx)(n.code,{children:"table_01"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"INSERT INTO postgresql_test.database_01.table_01 (name, salary) VALUES ('ice', 12);\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Insert data into the table ",(0,a.jsx)(n.code,{children:"table_01"})," from select:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"INSERT INTO postgresql_test.database_01.table_01 (name, salary) SELECT * FROM postgresql_test.database_01.table_01;\n"})}),"\n",(0,a.jsx)(n.h3,{id:"querying-data",children:"Querying data"}),"\n",(0,a.jsxs)(n.p,{children:["Query the ",(0,a.jsx)(n.code,{children:"table_01"})," table:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM postgresql_test.database_01.table_01;\n"})}),"\n",(0,a.jsx)(n.h3,{id:"modify-a-table",children:"Modify a table"}),"\n",(0,a.jsxs)(n.p,{children:["Add a new column ",(0,a.jsx)(n.code,{children:"age"})," to the ",(0,a.jsx)(n.code,{children:"table_01"})," table:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"ALTER TABLE postgresql_test.database_01.table_01 ADD COLUMN age int;\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Drop a column ",(0,a.jsx)(n.code,{children:"age"})," from the ",(0,a.jsx)(n.code,{children:"table_01"})," table:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"ALTER TABLE postgresql_test.database_01.table_01 DROP COLUMN age;\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Rename the ",(0,a.jsx)(n.code,{children:"table_01"})," table to ",(0,a.jsx)(n.code,{children:"table_02"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"ALTER TABLE postgresql_test.database_01.table_01 RENAME TO postgresql_test.database_01.table_02;\n"})}),"\n",(0,a.jsx)(n.h3,{id:"drop",children:"Drop"}),"\n",(0,a.jsx)(n.p,{children:"Drop a schema:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"DROP SCHEMA postgresql_test.database_01;\n"})}),"\n",(0,a.jsx)(n.p,{children:"Drop a table:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"DROP TABLE postgresql_test.database_01.table_01;\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);